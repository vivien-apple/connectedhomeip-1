#ifndef __ZAP_EMBER_ENUMS__
#define __ZAP_EMBER_ENUMS__

// ZCL enums

// Enum for 11073ConnectRequestConnectControl
typedef enum
{
    EMBER_ZCL_11073_CONNECT_REQUEST_CONNECT_CONTROL_PREEMPTIBLE = 0x01,
} EmberAf11073ConnectRequestConnectControl;

// Enum for 11073TunnelConnectionStatus
typedef enum
{
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_DISCONNECTED      = 0x00,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_CONNECTED         = 0x01,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_NOT_AUTHORIZED    = 0x02,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_RECONNECT_REQUEST = 0x03,
    EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_ALREADY_CONNECTED = 0x04,
} EmberAf11073TunnelConnectionStatus;

// Enum for AlertCountType
typedef enum
{
    EMBER_ZCL_ALERT_COUNT_TYPE_UNSTRUCTURED = 0x00,
} EmberAfAlertCountType;

// Enum for AlertStructureCategory
typedef enum
{
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_WARNING = 0x0100,
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_DANGER  = 0x0200,
    EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_FAILURE = 0x0300,
} EmberAfAlertStructureCategory;

// Enum for AlertStructurePresenceRecovery
typedef enum
{
    EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_RECOVERY = 0x0000,
    EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_PRESENCE = 0x1000,
} EmberAfAlertStructurePresenceRecovery;

// Enum for AlternateCostUnit
typedef enum
{
    EMBER_ZCL_ALTERNATE_COST_UNIT_KG_OF_CO2_PER_UNIT_OF_MEASURE = 0x02,
} EmberAfAlternateCostUnit;

// Enum for AmiCriticalityLevel
typedef enum
{
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_RESERVED           = 0x00,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_GREEN              = 0x01,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_1                  = 0x02,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_2                  = 0x03,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_3                  = 0x04,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_4                  = 0x05,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_5                  = 0x06,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_EMERGENCY          = 0x07,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_PLANNED_OUTAGE     = 0x08,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_SERVICE_DISCONNECT = 0x09,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED1   = 0x0A,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED2   = 0x0B,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED3   = 0x0C,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED4   = 0x0D,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED5   = 0x0E,
    EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED6   = 0x0F,
} EmberAfAmiCriticalityLevel;

// Enum for AmiEventStatus
typedef enum
{
    EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_RX                          = 0x01,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_STARTED                                          = 0x02,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED                                        = 0x03,
    EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_OUT                             = 0x04,
    EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_IN                              = 0x05,
    EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_CANCELED                            = 0x06,
    EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_SUPERSEDED                          = 0x07,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_WITH_USER_OPT_OUT            = 0x08,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_DUE_TO_USER_OPT_IN           = 0x09,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED_NO_USER_PARTICIPATION_PREVIOUS_OPT_OUT = 0x0A,
    EMBER_ZCL_AMI_EVENT_STATUS_INVALID_OPT_OUT                                        = 0xF6,
    EMBER_ZCL_AMI_EVENT_STATUS_EVENT_NOT_FOUND                                        = 0xF7,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND                        = 0xF8,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND_INVALID_EFFECTIVE_TIME = 0xF9,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_EVENT_EXPIRED                                 = 0xFB,
    EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_UNDEFINED_EVENT                = 0xFD,
    EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_REJECTED                    = 0xFE,
} EmberAfAmiEventStatus;

// Enum for AmiGetProfileStatus
typedef enum
{
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_SUCCESS                                       = 0x00,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_UNDEFINED_INTERVAL_CHANNEL_REQUESTED          = 0x01,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_INTERVAL_CHANNEL_NOT_SUPPORTED                = 0x02,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_INVALID_END_TIME                              = 0x03,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_MORE_PERIODS_REQUESTED_THAN_CAN_BE_RETURNED   = 0x04,
    EMBER_ZCL_AMI_GET_PROFILE_STATUS_NO_INTERVALS_AVAILABLE_FOR_THE_REQUESTED_TIME = 0x05,
} EmberAfAmiGetProfileStatus;

// Enum for AmiIntervalChannel
typedef enum
{
    EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_DELIVERED = 0x00,
    EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_RECEIVED  = 0x01,
} EmberAfAmiIntervalChannel;

// Enum for AmiIntervalPeriod
typedef enum
{
    EMBER_ZCL_AMI_INTERVAL_PERIOD_DAILY      = 0x00,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES60  = 0x01,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES30  = 0x02,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES15  = 0x03,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES10  = 0x04,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES7P5 = 0x05,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES5   = 0x06,
    EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES2P5 = 0x07,
} EmberAfAmiIntervalPeriod;

// Enum for AmiKeyEstablishmentStatus
typedef enum
{
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_SUCCESS           = 0x00,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNKNOWN_ISSUER    = 0x01,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_KEY_CONFIRM   = 0x02,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_MESSAGE       = 0x03,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_NO_RESOURCES      = 0x04,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNSUPPORTED_SUITE = 0x05,
    EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_INVALID_KEY_USAGE = 0x06,
} EmberAfAmiKeyEstablishmentStatus;

// Enum for AmiRegistrationState
typedef enum
{
    EMBER_ZCL_AMI_REGISTRATION_STATE_UNREGISTERED                   = 0x0,
    EMBER_ZCL_AMI_REGISTRATION_STATE_JOINING_NETWORK                = 0x1,
    EMBER_ZCL_AMI_REGISTRATION_STATE_JOINED_NETWORK                 = 0x2,
    EMBER_ZCL_AMI_REGISTRATION_STATE_SUBMITTED_REGISTRATION_REQUEST = 0x3,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTRATION_REJECTED          = 0x4,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERED                     = 0x5,
    EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERATION_NOT_POSSIBLE     = 0x6,
} EmberAfAmiRegistrationState;

// Enum for AmiUnitOfMeasure
typedef enum
{
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS                = 0x00,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR           = 0x01,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR            = 0x02,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR     = 0x03,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR            = 0x04,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR      = 0x05,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR          = 0x06,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR      = 0x07,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GAUGE                      = 0x08,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE                   = 0x09,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND          = 0x0A,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS                       = 0x0B,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND            = 0x0C,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_K_VAR_OR_K_VAR_HOURS           = 0x0D,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS_BCD            = 0x80,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR_BCD       = 0x81,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR_BCD        = 0x82,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR_BCD = 0x83,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR_BCD        = 0x84,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR_BCD  = 0x85,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR_BCD      = 0x86,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR_BCD  = 0x87,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GUAGE_BCD                  = 0x88,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE_BCD               = 0x89,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND_BCD      = 0x8A,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS_BCD                   = 0x8B,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND_BCD        = 0x8C,
    EMBER_ZCL_AMI_UNIT_OF_MEASURE_K_VAR_OR_K_VAR_HOURS_BCD       = 0x8D,
} EmberAfAmiUnitOfMeasure;

// Enum for AnonymousDataState
typedef enum
{
    EMBER_ZCL_ANONYMOUS_DATA_STATE_NO_SOURCE_FOUND = 0x0,
    EMBER_ZCL_ANONYMOUS_DATA_STATE_SOURCE_FOUND    = 0x1,
} EmberAfAnonymousDataState;

// Enum for ApplianceStatus
typedef enum
{
    EMBER_ZCL_APPLIANCE_STATUS_OFF                         = 0x01,
    EMBER_ZCL_APPLIANCE_STATUS_STAND_BY                    = 0x02,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED                  = 0x03,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED_WAITING_TO_START = 0x04,
    EMBER_ZCL_APPLIANCE_STATUS_RUNNING                     = 0x05,
    EMBER_ZCL_APPLIANCE_STATUS_PAUSE                       = 0x06,
    EMBER_ZCL_APPLIANCE_STATUS_END_PROGRAMMED              = 0x07,
    EMBER_ZCL_APPLIANCE_STATUS_FAILURE                     = 0x08,
    EMBER_ZCL_APPLIANCE_STATUS_PROGRAMME_INTERRUPTED       = 0x09,
    EMBER_ZCL_APPLIANCE_STATUS_IDLE                        = 0x0A,
    EMBER_ZCL_APPLIANCE_STATUS_RINSE_HOLD                  = 0x0B,
    EMBER_ZCL_APPLIANCE_STATUS_SERVICE                     = 0x0C,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERFREEZING               = 0x0D,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERCOOLING                = 0x0E,
    EMBER_ZCL_APPLIANCE_STATUS_SUPERHEATING                = 0x0F,
} EmberAfApplianceStatus;

// Enum for AttributeReportingStatus
typedef enum
{
    EMBER_ZCL_ATTRIBUTE_REPORTING_STATUS_PENDING                      = 0x00,
    EMBER_ZCL_ATTRIBUTE_REPORTING_STATUS_ATTRIBUTE_REPORTING_COMPLETE = 0x01,
} EmberAfAttributeReportingStatus;

// Enum for AttributeWritePermission
typedef enum
{
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE               = 0x00,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL       = 0x01,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY = 0x02,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_UNSUPPORTED_ATTRIBUTE    = 0x86,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_VALUE            = 0x87,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_READ_ONLY                = 0x88,
    EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_DATA_TYPE        = 0x8D,
} EmberAfAttributeWritePermission;

// Enum for BarrierControlBarrierPosition
typedef enum
{
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_CLOSED  = 0,
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_OPEN    = 100,
    EMBER_ZCL_BARRIER_CONTROL_BARRIER_POSITION_UNKNOWN = 0xFF,
} EmberAfBarrierControlBarrierPosition;

// Enum for BarrierControlMovingState
typedef enum
{
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_STOPPED = 0x00,
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_CLOSING = 0x01,
    EMBER_ZCL_BARRIER_CONTROL_MOVING_STATE_OPENING = 0x02,
} EmberAfBarrierControlMovingState;

// Enum for BatterySize
typedef enum
{
    EMBER_ZCL_BATTERY_SIZE_NO_BATTERY = 0x0,
    EMBER_ZCL_BATTERY_SIZE_BUILT_IN   = 0x1,
    EMBER_ZCL_BATTERY_SIZE_OTHER      = 0x2,
    EMBER_ZCL_BATTERY_SIZE_AA         = 0x3,
    EMBER_ZCL_BATTERY_SIZE_AAA        = 0x4,
    EMBER_ZCL_BATTERY_SIZE_C          = 0x5,
    EMBER_ZCL_BATTERY_SIZE_D          = 0x6,
    EMBER_ZCL_BATTERY_SIZE_UNKNOWN    = 0xff,
} EmberAfBatterySize;

// Enum for BillingPeriodDurationUnits
typedef enum
{
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MINUTES = 0x000000,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_DAYS    = 0x400000,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_WEEKS   = 0x800000,
    EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MONTHS  = 0xC00000,
} EmberAfBillingPeriodDurationUnits;

// Enum for Block
typedef enum
{
    EMBER_ZCL_BLOCK_NO_BLOCKS_IN_USE = 0x00,
    EMBER_ZCL_BLOCK_BLOCK1           = 0x01,
    EMBER_ZCL_BLOCK_BLOCK2           = 0x02,
    EMBER_ZCL_BLOCK_BLOCK3           = 0x03,
    EMBER_ZCL_BLOCK_BLOCK4           = 0x04,
    EMBER_ZCL_BLOCK_BLOCK5           = 0x05,
    EMBER_ZCL_BLOCK_BLOCK6           = 0x06,
    EMBER_ZCL_BLOCK_BLOCK7           = 0x07,
    EMBER_ZCL_BLOCK_BLOCK8           = 0x08,
    EMBER_ZCL_BLOCK_BLOCK9           = 0x09,
    EMBER_ZCL_BLOCK_BLOCK10          = 0x0A,
    EMBER_ZCL_BLOCK_BLOCK11          = 0x0B,
    EMBER_ZCL_BLOCK_BLOCK12          = 0x0C,
    EMBER_ZCL_BLOCK_BLOCK13          = 0x0D,
    EMBER_ZCL_BLOCK_BLOCK14          = 0x0E,
    EMBER_ZCL_BLOCK_BLOCK15          = 0x0F,
    EMBER_ZCL_BLOCK_BLOCK16          = 0x10,
} EmberAfBlock;

// Enum for BlockPeriodDurationTypeControl
typedef enum
{
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_START_OF_TIMEBASE = 0x00,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_END_OF_TIMEBASE   = 0x10,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_CONTROL_NOT_SPECIFIED     = 0x20,
} EmberAfBlockPeriodDurationTypeControl;

// Enum for BlockPeriodDurationTypeTimebase
typedef enum
{
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_MINUTES = 0x00,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_DAYS    = 0x01,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_WEEKS   = 0x02,
    EMBER_ZCL_BLOCK_PERIOD_DURATION_TYPE_TIMEBASE_MONTHS  = 0x03,
} EmberAfBlockPeriodDurationTypeTimebase;

// Enum for CO2Unit
typedef enum
{
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_KILOWATT_HOUR        = 0x01,
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_GALLON_OF_GASOLINE   = 0x02,
    EMBER_ZCL_CO2_UNIT_KILOGRAM_PER_THERM_OF_NATURAL_GAS = 0x03,
} EmberAfCO2Unit;

// Enum for CalendarTimeReference
typedef enum
{
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_UTC_TIME      = 0x00,
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_STANDARD_TIME = 0x01,
    EMBER_ZCL_CALENDAR_TIME_REFERENCE_LOCAL_TIME    = 0x02,
} EmberAfCalendarTimeReference;

// Enum for CalendarType
typedef enum
{
    EMBER_ZCL_CALENDAR_TYPE_DELIVERED_CALENDAR              = 0x00,
    EMBER_ZCL_CALENDAR_TYPE_RECEIVED_CALENDAR               = 0x01,
    EMBER_ZCL_CALENDAR_TYPE_DELIVERED_AND_RECEIVED_CALENDAR = 0x02,
    EMBER_ZCL_CALENDAR_TYPE_FRIENDLY_CREDIT_CALENDAR        = 0x03,
    EMBER_ZCL_CALENDAR_TYPE_AUXILLIARY_LOAD_SWITCH_CALENDAR = 0x04,
} EmberAfCalendarType;

// Enum for CalorificValueUnit
typedef enum
{
    EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_CUBIC_METER = 0x01,
    EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_KILOGRAM    = 0x02,
} EmberAfCalorificValueUnit;

// Enum for CecedSpecificationVersion
typedef enum
{
    EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_NOT_CERTIFIED = 0x10,
    EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_CERTIFIED     = 0x1A,
} EmberAfCecedSpecificationVersion;

// Enum for ColorControlOptions
typedef enum
{
    EMBER_ZCL_COLOR_CONTROL_OPTIONS_EXECUTE_IF_OFF = 0x1,
} EmberAfColorControlOptions;

// Enum for ColorLoopAction
typedef enum
{
    EMBER_ZCL_COLOR_LOOP_ACTION_DEACTIVATE                                  = 0x00,
    EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_COLOR_LOOP_START_ENHANCED_HUE = 0x01,
    EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_ENHANCED_CURRENT_HUE          = 0x02,
} EmberAfColorLoopAction;

// Enum for ColorLoopDirection
typedef enum
{
    EMBER_ZCL_COLOR_LOOP_DIRECTION_DECREMENT_HUE = 0x00,
    EMBER_ZCL_COLOR_LOOP_DIRECTION_INCREMENT_HUE = 0x01,
} EmberAfColorLoopDirection;

// Enum for ColorMode
typedef enum
{
    EMBER_ZCL_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION = 0x00,
    EMBER_ZCL_COLOR_MODE_CURRENT_X_AND_CURRENT_Y            = 0x01,
    EMBER_ZCL_COLOR_MODE_COLOR_TEMPERATURE                  = 0x02,
} EmberAfColorMode;

// Enum for CommandIdentification
typedef enum
{
    EMBER_ZCL_COMMAND_IDENTIFICATION_START                  = 0x01,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP                   = 0x02,
    EMBER_ZCL_COMMAND_IDENTIFICATION_PAUSE                  = 0x03,
    EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERFREEZING    = 0x04,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERFREEZING     = 0x05,
    EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERCOOLING     = 0x06,
    EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERCOOLING      = 0x07,
    EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_GAS            = 0x08,
    EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_GAS             = 0x09,
    EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_ENERGY_CONTROL  = 0x0A,
    EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_ENERGY_CONTROL = 0x0B,
} EmberAfCommandIdentification;

// Enum for CommissioningStartupControl
typedef enum
{
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_NO_ACTION          = 0x00,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_FORM_NETWORK       = 0x01,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_REJOIN_NETWORK     = 0x02,
    EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_START_FROM_SCRATCH = 0x03,
} EmberAfCommissioningStartupControl;

// Enum for CommodityType
typedef enum
{
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING                   = 0x00,
    EMBER_ZCL_COMMODITY_TYPE_GAS_METERING                        = 0x01,
    EMBER_ZCL_COMMODITY_TYPE_WATER_METERING                      = 0x02,
    EMBER_ZCL_COMMODITY_TYPE_THERMAL_METERING                    = 0x03,
    EMBER_ZCL_COMMODITY_TYPE_PRESSURE_METERING                   = 0x04,
    EMBER_ZCL_COMMODITY_TYPE_HEAT_METERING                       = 0x05,
    EMBER_ZCL_COMMODITY_TYPE_COOLING_METERING                    = 0x06,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_VEHICLE_CHARGING_METERING  = 0x07,
    EMBER_ZCL_COMMODITY_TYPE_PV_GENERATION_METERING              = 0x08,
    EMBER_ZCL_COMMODITY_TYPE_WIND_TURBINE_GENERATION_METERING    = 0x09,
    EMBER_ZCL_COMMODITY_TYPE_WATER_TURBINE_GENERATION_METERING   = 0x0A,
    EMBER_ZCL_COMMODITY_TYPE_MICRO_GENERATION_METERING           = 0x0B,
    EMBER_ZCL_COMMODITY_TYPE_SOLAR_HOT_WATER_GENERATION_METERING = 0x0C,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT1          = 0x0D,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT2          = 0x0E,
    EMBER_ZCL_COMMODITY_TYPE_ELECTRIC_METERING_ELEMENT3          = 0x0F,
} EmberAfCommodityType;

// Enum for CppEventResponseCppAuth
typedef enum
{
    EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_ACCEPTED = 0x01,
    EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_REJECTED = 0x02,
} EmberAfCppEventResponseCppAuth;

// Enum for CppPriceTier
typedef enum
{
    EMBER_ZCL_CPP_PRICE_TIER_CPP1 = 0x00,
    EMBER_ZCL_CPP_PRICE_TIER_CPP2 = 0x01,
} EmberAfCppPriceTier;

// Enum for CreditAdjustmentType
typedef enum
{
    EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_INCREMENTAL = 0x00,
    EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_ABSOLUTE    = 0x01,
} EmberAfCreditAdjustmentType;

// Enum for CreditPaymentStatus
typedef enum
{
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_PENDING            = 0x00,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_RECEIVED_PAID      = 0x01,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_OVERDUE            = 0x02,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_2_PAYMENTS_OVERDUE = 0x03,
    EMBER_ZCL_CREDIT_PAYMENT_STATUS_3_PAYMENTS_OVERDUE = 0x04,
} EmberAfCreditPaymentStatus;

// Enum for DataQualityId
typedef enum
{
    EMBER_ZCL_DATA_QUALITY_ID_ALL_DATA_CERTIFIED                       = 0x0000,
    EMBER_ZCL_DATA_QUALITY_ID_ONLY_INSTANTANEOUS_POWER_NOT_CERTIFIED   = 0x0001,
    EMBER_ZCL_DATA_QUALITY_ID_ONLY_CUMULATED_CONSUMPTION_NOT_CERTIFIED = 0x0002,
    EMBER_ZCL_DATA_QUALITY_ID_NOT_CERTIFIED_DATA                       = 0x0003,
} EmberAfDataQualityId;

// Enum for DebtAmountType
typedef enum
{
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE1_ABSOLUTE    = 0x00,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE1_INCREMENTAL = 0x01,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE2_ABSOLUTE    = 0x02,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE2_INCREMENTAL = 0x03,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE3_ABSOLUTE    = 0x04,
    EMBER_ZCL_DEBT_AMOUNT_TYPE_TYPE3_INCREMENTAL = 0x05,
} EmberAfDebtAmountType;

// Enum for DebtRecoveryFrequency
typedef enum
{
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_HOUR    = 0x00,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_DAY     = 0x01,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_WEEK    = 0x02,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_MONTH   = 0x03,
    EMBER_ZCL_DEBT_RECOVERY_FREQUENCY_PER_QUARTER = 0x04,
} EmberAfDebtRecoveryFrequency;

// Enum for DebtRecoveryMethod
typedef enum
{
    EMBER_ZCL_DEBT_RECOVERY_METHOD_TIME_BASED       = 0x00,
    EMBER_ZCL_DEBT_RECOVERY_METHOD_PERCENTAGE_BASED = 0x01,
    EMBER_ZCL_DEBT_RECOVERY_METHOD_CATCH_UP_BASED   = 0x02,
} EmberAfDebtRecoveryMethod;

// Enum for DehumidifcationLockout
typedef enum
{
    EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_NOT_ALLOWED = 0x0,
    EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_ALLOWED     = 0x1,
} EmberAfDehumidifcationLockout;

// Enum for DeviceInformationRecordSort
typedef enum
{
    EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_NOT_SORTED      = 0x00,
    EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_TOP_OF_THE_LIST = 0x01,
} EmberAfDeviceInformationRecordSort;

// Enum for DeviceStatus2Structure
typedef enum
{
    EMBER_ZCL_DEVICE_STATUS2_STRUCTURE_IRIS_SYMPTOM_CODE = 0x20,
} EmberAfDeviceStatus2Structure;

// Enum for DoorLockEventSource
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_KEYPAD        = 0x00,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RF            = 0x01,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_MANUAL        = 0x02,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RFID          = 0x03,
    EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_INDETERMINATE = 0xFF,
} EmberAfDoorLockEventSource;

// Enum for DoorLockEventType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_OPERATION   = 0x00,
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_PROGRAMMING = 0x01,
    EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_ALARM       = 0x02,
} EmberAfDoorLockEventType;

// Enum for DoorLockOperatingMode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NORMAL_MODE            = 0x00,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_VACATION_MODE          = 0x01,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PRIVACY_MODE           = 0x02,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NO_RF_LOCK_OR_UNLOCK   = 0x03,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_LOCAL_PROGRAMMING_MODE = 0x04,
    EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PASSAGE_MODE______     = 0x05,
} EmberAfDoorLockOperatingMode;

// Enum for DoorLockOperationEventCode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC  = 0x00,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK                     = 0x01,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK                   = 0x02,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_PIN_OR_ID   = 0x03,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_SCHEDULE    = 0x04,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_PIN_OR_ID = 0x05,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_SCHEDULE  = 0x06,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_ONE_TOUCH_LOCK           = 0x07,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_LOCK                 = 0x08,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_UNLOCK               = 0x09,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_AUTO_LOCK                = 0x0A,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_LOCK            = 0x0B,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_UNLOCK          = 0x0C,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_LOCK              = 0x0D,
    EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_UNLOCK            = 0x0E,
} EmberAfDoorLockOperationEventCode;

// Enum for DoorLockProgrammingEventCode
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC = 0x00,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_MASTER_CODE_CHANGED     = 0x01,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_ADDED               = 0x02,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_DELETED             = 0x03,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_CHANGED             = 0x04,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_ADDED                = 0x05,
    EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_DELETED              = 0x06,
} EmberAfDoorLockProgrammingEventCode;

// Enum for DoorLockSecurityLevel
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_NETWORK_SECURITY = 0x00,
    EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_APS_SECURITY     = 0x01,
} EmberAfDoorLockSecurityLevel;

// Enum for DoorLockSetPinOrIdStatus
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_SUCCESS              = 0x00,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_GENERAL_FAILURE      = 0x01,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_MEMORY_FULL          = 0x02,
    EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_DUPLICATE_CODE_ERROR = 0x03,
} EmberAfDoorLockSetPinOrIdStatus;

// Enum for DoorLockSoundVolume
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_SILENT = 0x00,
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_LOW    = 0x01,
    EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_HIGH   = 0x02,
} EmberAfDoorLockSoundVolume;

// Enum for DoorLockState
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_STATE_NOT_FULLY_LOCKED = 0x00,
    EMBER_ZCL_DOOR_LOCK_STATE_LOCKED           = 0x01,
    EMBER_ZCL_DOOR_LOCK_STATE_UNLOCKED         = 0x02,
} EmberAfDoorLockState;

// Enum for DoorLockType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_BOLT      = 0x00,
    EMBER_ZCL_DOOR_LOCK_TYPE_MAGNETIC       = 0x01,
    EMBER_ZCL_DOOR_LOCK_TYPE_MORTISE        = 0x02,
    EMBER_ZCL_DOOR_LOCK_TYPE_RIM            = 0x03,
    EMBER_ZCL_DOOR_LOCK_TYPE_LATCH_BOLT     = 0x04,
    EMBER_ZCL_DOOR_LOCK_TYPE_CYLINDRICAL    = 0x05,
    EMBER_ZCL_DOOR_LOCK_TYPE_TUBULAR        = 0x06,
    EMBER_ZCL_DOOR_LOCK_TYPE_INTERCONNECTED = 0x07,
    EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_LATCH     = 0x08,
    EMBER_ZCL_DOOR_LOCK_TYPE_OTHER          = 0x09,
} EmberAfDoorLockType;

// Enum for DoorLockUserStatus
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_AVAILABLE         = 0x00,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_ENABLED  = 0x01,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_DISABLED = 0x03,
    EMBER_ZCL_DOOR_LOCK_USER_STATUS_NOT_SUPPORTED     = 0xFF,
} EmberAfDoorLockUserStatus;

// Enum for DoorLockUserType
typedef enum
{
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_UNRESTRICTED           = 0x00,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_YEAR_DAY_SCHEDULE_USER = 0x01,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_WEEK_DAY_SCHEDULE_USER = 0x02,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_MASTER_USER            = 0x03,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_NON_ACCESS_USER        = 0x04,
    EMBER_ZCL_DOOR_LOCK_USER_TYPE_NOT_SUPPORTED          = 0xFF,
} EmberAfDoorLockUserType;

// Enum for DoorState
typedef enum
{
    EMBER_ZCL_DOOR_STATE_OPEN              = 0x00,
    EMBER_ZCL_DOOR_STATE_CLOSED            = 0x01,
    EMBER_ZCL_DOOR_STATE_ERROR_JAMMED      = 0x02,
    EMBER_ZCL_DOOR_STATE_ERROR_FORCED_OPEN = 0x03,
    EMBER_ZCL_DOOR_STATE_ERROR_UNSPECIFIED = 0x04,
} EmberAfDoorState;

// Enum for ElectricityAlarmGroups
typedef enum
{
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L1         = 0x10,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L1        = 0x11,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L2         = 0x12,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L2        = 0x13,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L3         = 0x14,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L3        = 0x15,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L1        = 0x16,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L2        = 0x17,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L3        = 0x18,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L1   = 0x19,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L1  = 0x1A,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L2   = 0x1B,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L2  = 0x1C,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L3   = 0x1D,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L3  = 0x1E,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_GROUND_FAULT           = 0x1F,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_ELECTRIC_TAMPER_DETECT = 0x20,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_INCORRECT_POLARITY     = 0x21,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_CURRENT_NO_VOLTAGE     = 0x22,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_UNDER_VOLTAGE          = 0x23,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_VOLTAGE           = 0x24,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_NORMAL_VOLTAGE         = 0x25,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_PF_BELOW_THRESHOLD     = 0x26,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_PF_ABOVE_THRESHOLD     = 0x27,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_TERMINAL_COVER_REMOVED = 0x28,
    EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_TERMINAL_COVER_CLOSED  = 0x29,
} EmberAfElectricityAlarmGroups;

// Enum for EnhancedColorMode
typedef enum
{
    EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION          = 0x00,
    EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_X_AND_CURRENT_Y                     = 0x01,
    EMBER_ZCL_ENHANCED_COLOR_MODE_COLOR_TEMPERATURE                           = 0x02,
    EMBER_ZCL_ENHANCED_COLOR_MODE_ENHANCED_CURRENT_HUE_AND_CURRENT_SATURATION = 0x03,
} EmberAfEnhancedColorMode;

// Enum for EventConfigurationControl
typedef enum
{
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_LIST                = 0x00,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_EVENT_GROUP         = 0x01,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_LOG_TYPE            = 0x02,
    EMBER_ZCL_EVENT_CONFIGURATION_CONTROL_APPLY_BY_CONFIGURATION_MATCH = 0x03,
} EmberAfEventConfigurationControl;

// Enum for EventConfigurationLogAction
typedef enum
{
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_DO_NOT_LOG            = 0x00,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_TAMPER         = 0x01,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_FAULT          = 0x02,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_GENERAL_EVENT  = 0x03,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_SECURITY_EVENT = 0x04,
    EMBER_ZCL_EVENT_CONFIGURATION_LOG_ACTION_LOG_AS_NETWORK_EVENT  = 0x05,
} EmberAfEventConfigurationLogAction;

// Enum for EventControl
typedef enum
{
    EMBER_ZCL_EVENT_CONTROL_RETRIEVE_MINIMAL_INFORMATION = 0x00,
    EMBER_ZCL_EVENT_CONTROL_RETRIEVE_FULL_INFORMATION    = 0x10,
} EmberAfEventControl;

// Enum for EventId
typedef enum
{
    EMBER_ZCL_EVENT_ID_METER_COVER_REMOVED                   = 0x00,
    EMBER_ZCL_EVENT_ID_METER_COVER_CLOSED                    = 0x01,
    EMBER_ZCL_EVENT_ID_STRONG_MAGNETIC_FIELD                 = 0x02,
    EMBER_ZCL_EVENT_ID_NO_STRONG_MAGNETIC_FIELD              = 0x03,
    EMBER_ZCL_EVENT_ID_BATTERY_FAILURE                       = 0x04,
    EMBER_ZCL_EVENT_ID_LOW_BATTERY                           = 0x05,
    EMBER_ZCL_EVENT_ID_PROGRAM_MEMORY_ERROR                  = 0x06,
    EMBER_ZCL_EVENT_ID_RAM_ERROR                             = 0x07,
    EMBER_ZCL_EVENT_ID_NV_MEMORY_ERROR                       = 0x08,
    EMBER_ZCL_EVENT_ID_MEASUREMENT_SYSTEM_ERROR              = 0x09,
    EMBER_ZCL_EVENT_ID_WATCHDOG_ERROR                        = 0x0A,
    EMBER_ZCL_EVENT_ID_SUPPLY_DISCONNECT_FAILURE             = 0x0B,
    EMBER_ZCL_EVENT_ID_SUPPLY_CONNECT_FAILURE                = 0x0C,
    EMBER_ZCL_EVENT_ID_MEASURMENT_SOFTWARE_CHANGED           = 0x0D,
    EMBER_ZCL_EVENT_ID_DST_ENABLED                           = 0x0E,
    EMBER_ZCL_EVENT_ID_DST_DISABLED                          = 0x0F,
    EMBER_ZCL_EVENT_ID_CLOCK_ADJ_BACKWARD                    = 0x10,
    EMBER_ZCL_EVENT_ID_CLOCK_ADJ_FORWARD                     = 0x11,
    EMBER_ZCL_EVENT_ID_CLOCK_INVALID                         = 0x12,
    EMBER_ZCL_EVENT_ID_COMMS_ERROR_HAN                       = 0x13,
    EMBER_ZCL_EVENT_ID_COMMS_OK_HAN                          = 0x14,
    EMBER_ZCL_EVENT_ID_FRAUD_ATTEMPT                         = 0x15,
    EMBER_ZCL_EVENT_ID_POWER_LOSS                            = 0x16,
    EMBER_ZCL_EVENT_ID_INCORRECT_PROTOCOL                    = 0x17,
    EMBER_ZCL_EVENT_ID_UNUSUAL_HAN_TRAFFIC                   = 0x18,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_CLOCK_CHANGE               = 0x19,
    EMBER_ZCL_EVENT_ID_COMMS_USING_UNAUTHENTICATED_COMPONENT = 0x1A,
    EMBER_ZCL_EVENT_ID_ERROR_REG_CLEAR                       = 0x1B,
    EMBER_ZCL_EVENT_ID_ALARM_REG_CLEAR                       = 0x1C,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_HW_RESET                   = 0x1D,
    EMBER_ZCL_EVENT_ID_UNEXPECTED_PROGRAM_EXECUTION          = 0x1E,
    EMBER_ZCL_EVENT_ID_EVENT_LOG_CLEARED                     = 0x1F,
    EMBER_ZCL_EVENT_ID_MANUAL_DISCONNECT                     = 0x20,
    EMBER_ZCL_EVENT_ID_MANUAL_CONNECT                        = 0x21,
    EMBER_ZCL_EVENT_ID_REMOTE_DISCONNECTION                  = 0x22,
    EMBER_ZCL_EVENT_ID_LOCAL_DISCONNECTION                   = 0x23,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_EXCEEDED              = 0x24,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_OK                    = 0x25,
    EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_CHANGED               = 0x26,
    EMBER_ZCL_EVENT_ID_MAXIMUM_DEMAND_EXCEEDED               = 0x27,
    EMBER_ZCL_EVENT_ID_PROFILE_CLEARED                       = 0x28,
    EMBER_ZCL_EVENT_ID_FIRMWARE_READY_FOR_ACTIVATION         = 0x29,
    EMBER_ZCL_EVENT_ID_FIRMWARE_ACTIVATED                    = 0x2A,
    EMBER_ZCL_EVENT_ID_PATCH_FAILURE                         = 0x2B,
    EMBER_ZCL_EVENT_ID_TOU_TARIFF_ACTIVATION                 = 0x2C,
    EMBER_ZCL_EVENT_ID_8X8_TARIFFACTIVATED                   = 0x2D,
    EMBER_ZCL_EVENT_ID_SINGLE_TARIFF_RATE_ACTIVATED          = 0x2E,
    EMBER_ZCL_EVENT_ID_ASYNCHRONOUS_BILLING_OCCURRED         = 0x2F,
    EMBER_ZCL_EVENT_ID_SYNCHRONOUS_BILLING_OCCURRED          = 0x30,
    EMBER_ZCL_EVENT_ID_INCORRECT_POLARITY                    = 0x80,
    EMBER_ZCL_EVENT_ID_CURRENT_NO_VOLTAGE                    = 0x81,
    EMBER_ZCL_EVENT_ID_UNDER_VOLTAGE                         = 0x82,
    EMBER_ZCL_EVENT_ID_OVER_VOLTAGE                          = 0x83,
    EMBER_ZCL_EVENT_ID_NORMAL_VOLTAGE                        = 0x84,
    EMBER_ZCL_EVENT_ID_PF_BELOW_THRESHOLD                    = 0x85,
    EMBER_ZCL_EVENT_ID_PF_ABOVE_THRESHOLD                    = 0x86,
    EMBER_ZCL_EVENT_ID_TERMINAL_COVER_REMOVED                = 0x87,
    EMBER_ZCL_EVENT_ID_TERMINAL_COVER_CLOSED                 = 0x88,
    EMBER_ZCL_EVENT_ID_REVERSE_FLOW                          = 0xA0,
    EMBER_ZCL_EVENT_ID_TILT_TAMPER                           = 0xA1,
    EMBER_ZCL_EVENT_ID_BATTERY_COVER_REMOVED                 = 0xA2,
    EMBER_ZCL_EVENT_ID_BATTERY_COVER_CLOSED                  = 0xA3,
    EMBER_ZCL_EVENT_ID_EXCESS_FLOW                           = 0xA4,
    EMBER_ZCL_EVENT_ID_CREDIT_OK                             = 0xC0,
    EMBER_ZCL_EVENT_ID_LOW_CREDIT                            = 0xC1,
    EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_IN_USE               = 0xC0,
    EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_EXHAUSTED            = 0xC1,
    EMBER_ZCL_EVENT_ID_ZERO_CREDIT_EC_NOT_SELECTED           = 0xC2,
    EMBER_ZCL_EVENT_ID_SUPPLY_ON                             = 0xC3,
    EMBER_ZCL_EVENT_ID_SUPPLY_OFF_AARMED                     = 0xC4,
    EMBER_ZCL_EVENT_ID_SUPPLY_OFF                            = 0xC5,
    EMBER_ZCL_EVENT_ID_DISCOUNT_APPLIED                      = 0xC6,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_A               = 0xE0,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_B               = 0xE1,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_C               = 0xE2,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_D               = 0xE3,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_E               = 0xE4,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_F               = 0xE5,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_G               = 0xE6,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_H               = 0xE7,
    EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_I               = 0xE8,
} EmberAfEventId;

// Enum for EventIdentification
typedef enum
{
    EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_CYCLE        = 0x01,
    EMBER_ZCL_EVENT_IDENTIFICATION_TEMPERATURE_REACHED = 0x04,
    EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_COOKING      = 0x05,
    EMBER_ZCL_EVENT_IDENTIFICATION_SWITCHING_OFF       = 0x06,
    EMBER_ZCL_EVENT_IDENTIFICATION_WRONG_DATA          = 0x07,
} EmberAfEventIdentification;

// Enum for EventLogId
typedef enum
{
    EMBER_ZCL_EVENT_LOG_ID_ALL_LOGS                = 0x00,
    EMBER_ZCL_EVENT_LOG_ID_TAMPER_LOG              = 0x01,
    EMBER_ZCL_EVENT_LOG_ID_FAULT_LOG               = 0x02,
    EMBER_ZCL_EVENT_LOG_ID_GENERAL_EVENT_LOG       = 0x03,
    EMBER_ZCL_EVENT_LOG_ID_SECURITY_EVENT_LOG      = 0x04,
    EMBER_ZCL_EVENT_LOG_ID_NETWORK_EVENT_LOG       = 0x05,
    EMBER_ZCL_EVENT_LOG_ID_GBCS_GENERAL_EVENT_LOG  = 0x06,
    EMBER_ZCL_EVENT_LOG_ID_GBCS_SECURITY_EVENT_LOG = 0x07,
} EmberAfEventLogId;

// Enum for EventLogPayloadControl
typedef enum
{
    EMBER_ZCL_EVENT_LOG_PAYLOAD_CONTROL_EVENTS_DO_NOT_CROSS_FRAME_BOUNDARY = 0x00,
    EMBER_ZCL_EVENT_LOG_PAYLOAD_CONTROL_EVENT_CROSSES_FRAME_BOUNDARY       = 0x01,
} EmberAfEventLogPayloadControl;

// Enum for ExtendedGenericAlarmGroups
typedef enum
{
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MEASUREMENT_SYSTEM_ERROR                     = 0x70,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_WATCHDOG_ERROR                               = 0x71,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SUPPLY_DISCONNECT_FAILURE                    = 0x72,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SUPPLY_CONNECT_FAILURE                       = 0x73,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MEASURMENT_SOFTWARE_CHANGED                  = 0x74,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DST_ENABLED                                  = 0x75,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DST_DISABLED                                 = 0x76,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_ADJ_BACKWARD                           = 0x77,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_ADJ_FORWARD                            = 0x78,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_CLOCK_INVALID                                = 0x79,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMUNICATION_ERROR_HAN                      = 0x7A,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMUNICATION_OK_H_AN                        = 0x7B,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_FRAUD_ATTEMPT                          = 0x7C,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_POWER_LOSS                                   = 0x7D,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNUSUAL_HAN_TRAFFIC                          = 0x7E,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_CLOCK_CHANGE                      = 0x7F,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_COMMS_USING_UNAUTHENTICATED_COMPONENT        = 0x80,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_ERROR_REG_CLEAR                              = 0x81,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_ALARM_REG_CLEAR                              = 0x82,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_HW_RESET                          = 0x83,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNEXPECTED_PROGRAM_EXECUTION                 = 0x84,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_EVENT_LOG_CLEARED                            = 0x85,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_EXCEEDED                     = 0x86,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_OK                           = 0x87,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_LIMIT_THRESHOLD_CHANGED                      = 0x88,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_MAXIMUM_DEMAND_EXCEEDED                      = 0x89,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_PROFILE_CLEARED                              = 0x8A,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_SAMPLING_BUFFERCLEARED                       = 0x8B,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_BATTERY_WARNING                              = 0x8C,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_WRONG_SIGNATURE                              = 0x8D,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_NO_SIGNATURE                                 = 0x8E,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_UNAUTHORISED_ACTIONFROM_HAN                  = 0x8F,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_FAST_POLLING_START                           = 0x90,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_FAST_POLLING_END                             = 0x91,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_REPORTING_INTERVAL_CHANGED             = 0x92,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_DISCONNECT_DUETO_LOAD_LIMIT                  = 0x93,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_SUPPLY_STATUS_REGISTER_CHANGED         = 0x94,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_METER_ALARM_STATUS_REGISTER_CHANGED          = 0x95,
    EMBER_ZCL_EXTENDED_GENERIC_ALARM_GROUPS_EXTENDED_METER_ALARM_STATUS_REGISTER_CHANGED = 0x96,
} EmberAfExtendedGenericAlarmGroups;

// Enum for ExtendedNumberOfPriceTiers
typedef enum
{
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_REFER_TO_NUMBER_OF_PRICE_TIERS_FIELD = 0x00,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS16              = 0x01,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS17              = 0x02,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS18              = 0x03,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS19              = 0x04,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS20              = 0x05,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS21              = 0x06,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS22              = 0x07,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS23              = 0x08,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS24              = 0x09,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS25              = 0x0A,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS26              = 0x0B,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS27              = 0x0C,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS28              = 0x0D,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS29              = 0x0E,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS30              = 0x0F,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS31              = 0x10,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS32              = 0x11,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS33              = 0x12,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS34              = 0x13,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS35              = 0x14,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS36              = 0x15,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS37              = 0x16,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS38              = 0x17,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS39              = 0x18,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS40              = 0x19,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS41              = 0x1A,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS42              = 0x1B,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS43              = 0x1C,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS44              = 0x1D,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS45              = 0x1E,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS46              = 0x1F,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS47              = 0x20,
    EMBER_ZCL_EXTENDED_NUMBER_OF_PRICE_TIERS_NUMBER_OF_PRICE_TIERS48              = 0x21,
} EmberAfExtendedNumberOfPriceTiers;

// Enum for ExtendedPriceTier
typedef enum
{
    EMBER_ZCL_EXTENDED_PRICE_TIER_REFER_TO_PRICE_TIER_FIELD = 0x00,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER16_PRICE_LABEL        = 0x01,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER17_PRICE_LABEL        = 0x02,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER18_PRICE_LABEL        = 0x03,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER19_PRICE_LABEL        = 0x04,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER20_PRICE_LABEL        = 0x05,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER21_PRICE_LABEL        = 0x06,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER22_PRICE_LABEL        = 0x07,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER23_PRICE_LABEL        = 0x08,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER24_PRICE_LABEL        = 0x09,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER25_PRICE_LABEL        = 0x0A,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER26_PRICE_LABEL        = 0x0B,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER27_PRICE_LABEL        = 0x0C,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER28_PRICE_LABEL        = 0x0D,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER29_PRICE_LABEL        = 0x0E,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER30_PRICE_LABEL        = 0x0F,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER31_PRICE_LABEL        = 0x10,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER32_PRICE_LABEL        = 0x11,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER33_PRICE_LABEL        = 0x12,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER34_PRICE_LABEL        = 0x13,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER35_PRICE_LABEL        = 0x14,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER36_PRICE_LABEL        = 0x15,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER37_PRICE_LABEL        = 0x16,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER38_PRICE_LABEL        = 0x17,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER39_PRICE_LABEL        = 0x18,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER40_PRICE_LABEL        = 0x19,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER41_PRICE_LABEL        = 0x1A,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER42_PRICE_LABEL        = 0x1B,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER43_PRICE_LABEL        = 0x1C,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER44_PRICE_LABEL        = 0x1D,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER45_PRICE_LABEL        = 0x1E,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER46_PRICE_LABEL        = 0x1F,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER47_PRICE_LABEL        = 0x20,
    EMBER_ZCL_EXTENDED_PRICE_TIER_TIER48_PRICE_LABEL        = 0x21,
} EmberAfExtendedPriceTier;

// Enum for ExtendedRegisterTier
typedef enum
{
    EMBER_ZCL_EXTENDED_REGISTER_TIER_REFER_TO_REGISTER_TIER_FIELD                 = 0x00,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER16_SUMMATION_DELIVERED_ATTRIBUTE = 0x01,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER17_SUMMATION_DELIVERED_ATTRIBUTE = 0x02,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER18_SUMMATION_DELIVERED_ATTRIBUTE = 0x03,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER19_SUMMATION_DELIVERED_ATTRIBUTE = 0x04,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER20_SUMMATION_DELIVERED_ATTRIBUTE = 0x05,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER21_SUMMATION_DELIVERED_ATTRIBUTE = 0x06,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER22_SUMMATION_DELIVERED_ATTRIBUTE = 0x07,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER23_SUMMATION_DELIVERED_ATTRIBUTE = 0x08,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER24_SUMMATION_DELIVERED_ATTRIBUTE = 0x09,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER25_SUMMATION_DELIVERED_ATTRIBUTE = 0x0A,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER26_SUMMATION_DELIVERED_ATTRIBUTE = 0x0B,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER27_SUMMATION_DELIVERED_ATTRIBUTE = 0x0C,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER28_SUMMATION_DELIVERED_ATTRIBUTE = 0x0D,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER29_SUMMATION_DELIVERED_ATTRIBUTE = 0x0E,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER30_SUMMATION_DELIVERED_ATTRIBUTE = 0x0F,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER31_SUMMATION_DELIVERED_ATTRIBUTE = 0x10,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER32_SUMMATION_DELIVERED_ATTRIBUTE = 0x11,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER33_SUMMATION_DELIVERED_ATTRIBUTE = 0x12,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER34_SUMMATION_DELIVERED_ATTRIBUTE = 0x13,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER35_SUMMATION_DELIVERED_ATTRIBUTE = 0x14,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER36_SUMMATION_DELIVERED_ATTRIBUTE = 0x15,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER37_SUMMATION_DELIVERED_ATTRIBUTE = 0x16,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER38_SUMMATION_DELIVERED_ATTRIBUTE = 0x17,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER39_SUMMATION_DELIVERED_ATTRIBUTE = 0x18,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER40_SUMMATION_DELIVERED_ATTRIBUTE = 0x19,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER41_SUMMATION_DELIVERED_ATTRIBUTE = 0x1A,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER42_SUMMATION_DELIVERED_ATTRIBUTE = 0x1B,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER43_SUMMATION_DELIVERED_ATTRIBUTE = 0x1C,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER44_SUMMATION_DELIVERED_ATTRIBUTE = 0x1D,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER45_SUMMATION_DELIVERED_ATTRIBUTE = 0x1E,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER46_SUMMATION_DELIVERED_ATTRIBUTE = 0x1F,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER47_SUMMATION_DELIVERED_ATTRIBUTE = 0x20,
    EMBER_ZCL_EXTENDED_REGISTER_TIER_CURRENT_TIER48_SUMMATION_DELIVERED_ATTRIBUTE = 0x21,
} EmberAfExtendedRegisterTier;

// Enum for EzModeCommissioningClusterType
typedef enum
{
    EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_SERVER = 0x00,
    EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_CLIENT = 0x01,
} EmberAfEzModeCommissioningClusterType;

// Enum for FanMode
typedef enum
{
    EMBER_ZCL_FAN_MODE_OFF    = 0x0,
    EMBER_ZCL_FAN_MODE_LOW    = 0x1,
    EMBER_ZCL_FAN_MODE_MEDIUM = 0x2,
    EMBER_ZCL_FAN_MODE_HIGH   = 0x3,
    EMBER_ZCL_FAN_MODE_ON     = 0x4,
    EMBER_ZCL_FAN_MODE_AUTO   = 0x5,
    EMBER_ZCL_FAN_MODE_SMART  = 0x6,
} EmberAfFanMode;

// Enum for FanModeSequence
typedef enum
{
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH      = 0x0,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH          = 0x1,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH_AUTO = 0x2,
    EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH_AUTO     = 0x3,
    EMBER_ZCL_FAN_MODE_SEQUENCE_ON_AUTO           = 0x4,
} EmberAfFanModeSequence;

// Enum for GasSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_TILT_TAMPER           = 0x60,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_BATTERY_COVER_REMOVED = 0x61,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_BATTERY_COVER_CLOSED  = 0x62,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_EXCESS_FLOW           = 0x63,
    EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_TILT_TAMPER_ENDED     = 0x64,
} EmberAfGasSpecificAlarmGroups;

// Enum for GenerationTier
typedef enum
{
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER1_SUMMATION_RECEIVED_ATTRIBUTE  = 0x01,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER2_SUMMATION_RECEIVED_ATTRIBUTE  = 0x02,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER3_SUMMATION_RECEIVED_ATTRIBUTE  = 0x03,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER4_SUMMATION_RECEIVED_ATTRIBUTE  = 0x04,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER5_SUMMATION_RECEIVED_ATTRIBUTE  = 0x05,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER6_SUMMATION_RECEIVED_ATTRIBUTE  = 0x06,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER7_SUMMATION_RECEIVED_ATTRIBUTE  = 0x07,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER8_SUMMATION_RECEIVED_ATTRIBUTE  = 0x08,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER9_SUMMATION_RECEIVED_ATTRIBUTE  = 0x09,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER10_SUMMATION_RECEIVED_ATTRIBUTE = 0x0A,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER11_SUMMATION_RECEIVED_ATTRIBUTE = 0x0B,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER12_SUMMATION_RECEIVED_ATTRIBUTE = 0x0C,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER13_SUMMATION_RECEIVED_ATTRIBUTE = 0x0D,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER14_SUMMATION_RECEIVED_ATTRIBUTE = 0x0E,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER15_SUMMATION_RECEIVED_ATTRIBUTE = 0x0F,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER16_SUMMATION_RECEIVED_ATTRIBUTE = 0x10,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER17_SUMMATION_RECEIVED_ATTRIBUTE = 0x11,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER18_SUMMATION_RECEIVED_ATTRIBUTE = 0x12,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER19_SUMMATION_RECEIVED_ATTRIBUTE = 0x13,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER20_SUMMATION_RECEIVED_ATTRIBUTE = 0x14,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER21_SUMMATION_RECEIVED_ATTRIBUTE = 0x15,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER22_SUMMATION_RECEIVED_ATTRIBUTE = 0x16,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER23_SUMMATION_RECEIVED_ATTRIBUTE = 0x17,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER24_SUMMATION_RECEIVED_ATTRIBUTE = 0x18,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER25_SUMMATION_RECEIVED_ATTRIBUTE = 0x19,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER26_SUMMATION_RECEIVED_ATTRIBUTE = 0x1A,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER27_SUMMATION_RECEIVED_ATTRIBUTE = 0x1B,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER28_SUMMATION_RECEIVED_ATTRIBUTE = 0x1C,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER29_SUMMATION_RECEIVED_ATTRIBUTE = 0x1D,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER30_SUMMATION_RECEIVED_ATTRIBUTE = 0x1E,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER31_SUMMATION_RECEIVED_ATTRIBUTE = 0x1F,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER32_SUMMATION_RECEIVED_ATTRIBUTE = 0x20,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER33_SUMMATION_RECEIVED_ATTRIBUTE = 0x21,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER34_SUMMATION_RECEIVED_ATTRIBUTE = 0x22,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER35_SUMMATION_RECEIVED_ATTRIBUTE = 0x23,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER36_SUMMATION_RECEIVED_ATTRIBUTE = 0x24,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER37_SUMMATION_RECEIVED_ATTRIBUTE = 0x25,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER38_SUMMATION_RECEIVED_ATTRIBUTE = 0x26,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER39_SUMMATION_RECEIVED_ATTRIBUTE = 0x27,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER40_SUMMATION_RECEIVED_ATTRIBUTE = 0x28,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER41_SUMMATION_RECEIVED_ATTRIBUTE = 0x29,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER42_SUMMATION_RECEIVED_ATTRIBUTE = 0x2A,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER43_SUMMATION_RECEIVED_ATTRIBUTE = 0x2B,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER44_SUMMATION_RECEIVED_ATTRIBUTE = 0x2C,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER45_SUMMATION_RECEIVED_ATTRIBUTE = 0x2D,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER46_SUMMATION_RECEIVED_ATTRIBUTE = 0x2E,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER47_SUMMATION_RECEIVED_ATTRIBUTE = 0x2F,
    EMBER_ZCL_GENERATION_TIER_CURRENT_TIER48_SUMMATION_RECEIVED_ATTRIBUTE = 0x30,
} EmberAfGenerationTier;

// Enum for GenericAlarmGroups
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_CHECK_METER              = 0x00,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_LOW_BATTERY              = 0x01,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_TAMPER_DETECT            = 0x02,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_LEAK_DETECT              = 0x05,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_SERVICE_DISCONNECT       = 0x06,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_METER_COVER_REMOVED      = 0x08,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_METER_COVER_CLOSED       = 0x09,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_STRONG_MAGNETIC_FIELD    = 0x0A,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_NO_STRONG_MAGNETIC_FIELD = 0x0B,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_BATTERY_FAILURE          = 0x0C,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_PROGRAM_MEMORY_ERROR     = 0x0D,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_RAM_ERROR                = 0x0E,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_NV_MEMORY_ERROR          = 0x0F,
} EmberAfGenericAlarmGroups;

// Enum for GenericAlarmGroupsElectricity
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_FAILURE = 0x03,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_QUALITY = 0x04,
} EmberAfGenericAlarmGroupsElectricity;

// Enum for GenericAlarmGroupsGas
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_LOW_PRESSURE = 0x04,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_REVERSE_FLOW = 0x07,
} EmberAfGenericAlarmGroupsGas;

// Enum for GenericAlarmGroupsHeatCooling
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_TEMPERATURE_SENSOR = 0x03,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_BURST_DETECT       = 0x04,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_FLOW_SENSOR        = 0x07,
} EmberAfGenericAlarmGroupsHeatCooling;

// Enum for GenericAlarmGroupsWater
typedef enum
{
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_PIPE_EMPTY   = 0x03,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_LOW_PRESSURE = 0x04,
    EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_REVERSE_FLOW = 0x07,
} EmberAfGenericAlarmGroupsWater;

// Enum for GenericDeviceClass
typedef enum
{
    EMBER_ZCL_GENERIC_DEVICE_CLASS_LIGHTING = 0x00,
} EmberAfGenericDeviceClass;

// Enum for GenericDeviceType
typedef enum
{
    EMBER_ZCL_GENERIC_DEVICE_TYPE_INCANDESCENT               = 0x00,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_SPOTLIGHT_HALOGEN          = 0x01,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_HALOGEN_BULB               = 0x02,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_CFL                        = 0x03,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LINEAR_FLOURESCENT         = 0x04,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_BULB                   = 0x05,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_SPOTLIGHT_LED              = 0x06,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_STRIP                  = 0x07,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_LED_TUBE                   = 0x08,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_INDOOR_FIXTURE     = 0x09,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_OUTDOOR_FIXTURE    = 0x0A,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PENDANT_FIXTURE            = 0x0B,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_FLOOR_STANDING_FIXTURE     = 0x0C,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_CONTROLLER         = 0xE0,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_WALL_SWITCH                = 0xE1,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PORTABLE_REMOTE_CONTROLLER = 0xE2,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_MOTION_OR_LIGHT_SENSOR     = 0xE3,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_GENERIC_ACTUATOR           = 0xF0,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_PLUGIN_UNIT                = 0xF1,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_RETROFIT_ACTUATOR          = 0xF2,
    EMBER_ZCL_GENERIC_DEVICE_TYPE_UNSPECIFIED                = 0xFF,
} EmberAfGenericDeviceType;

// Enum for GenericFlowPressureAlarmGroups
typedef enum
{
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_BURST_DETECT                    = 0x30,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_LOW                = 0x31,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_HIGH               = 0x32,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_COMMUNICATION_ERROR = 0x33,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_MEASUREMENT_FAULT   = 0x34,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_REVERSE_FLOW        = 0x35,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_AIR_DETECT          = 0x36,
    EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PIPE_EMPTY                      = 0x37,
} EmberAfGenericFlowPressureAlarmGroups;

// Enum for GpDeviceId
typedef enum
{
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_GENERIC_ONE_STATE_SWITCH   = 0x00,
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_GENERIC_TWO_STATE_SWITCH   = 0x00,
    EMBER_ZCL_GP_DEVICE_ID_GP_ON_OFF_SWITCH                     = 0x08,
    EMBER_ZCL_GP_DEVICE_ID_GP_LEVEL_CONTROL_SWITCH              = 0x10,
    EMBER_ZCL_GP_DEVICE_ID_GP_SIMPLE_SENSOR                     = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_ADVANCED_GENERIC_ONE_STATE_SWITCH = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_ADVANCED_GENERIC_TWO_STATE_SWITCH = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_COLOR_DIMMER_SWITCH               = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_LIGHT_SENSOR                      = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_OCCPANCY_SENSOR                   = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_DOOR_LOCK_CONTROLLER              = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_TEMPERATURE_SENSOR                = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_PRESSURE_SENSOR                   = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_FLOW_SENSOR                       = 0x18,
    EMBER_ZCL_GP_DEVICE_ID_GP_INDOOR_ENVIRONMENT_SNESOR         = 0x18,
} EmberAfGpDeviceId;

// Enum for GpGpdf
typedef enum
{
    EMBER_ZCL_GP_GPDF_IDENTIFY                    = 0x00,
    EMBER_ZCL_GP_GPDF_MATCH_ONLY_ON_GPD_ADDRESS   = 0x02,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE0               = 0x10,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE1               = 0x11,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE2               = 0x12,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE3               = 0x13,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE4               = 0x14,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE5               = 0x15,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE6               = 0x16,
    EMBER_ZCL_GP_GPDF_RECALL_SCENE7               = 0x17,
    EMBER_ZCL_GP_GPDF_STORE_SCENE0                = 0x18,
    EMBER_ZCL_GP_GPDF_STORE_SCENE1                = 0x19,
    EMBER_ZCL_GP_GPDF_STORE_SCENE2                = 0x1A,
    EMBER_ZCL_GP_GPDF_STORE_SCENE3                = 0x1B,
    EMBER_ZCL_GP_GPDF_STORE_SCENE4                = 0x1C,
    EMBER_ZCL_GP_GPDF_STORE_SCENE5                = 0x1D,
    EMBER_ZCL_GP_GPDF_STORE_SCENE6                = 0x1E,
    EMBER_ZCL_GP_GPDF_STORE_SCENE7                = 0x1F,
    EMBER_ZCL_GP_GPDF_OFF                         = 0x20,
    EMBER_ZCL_GP_GPDF_ON                          = 0x21,
    EMBER_ZCL_GP_GPDF_TOGGLE                      = 0x22,
    EMBER_ZCL_GP_GPDF_RELEASE                     = 0x23,
    EMBER_ZCL_GP_GPDF_MOVE_UP                     = 0x30,
    EMBER_ZCL_GP_GPDF_MOVE_DOWN                   = 0x31,
    EMBER_ZCL_GP_GPDF_STEP_UP                     = 0x32,
    EMBER_ZCL_GP_GPDF_STEP_DOWN                   = 0x33,
    EMBER_ZCL_GP_GPDF_LEVEL_CONTROL_STOP          = 0x34,
    EMBER_ZCL_GP_GPDF_MOVE_UP_WITH_ON_OFF         = 0x35,
    EMBER_ZCL_GP_GPDF_MOVE_DOWN_WITH_ON_OFF       = 0x36,
    EMBER_ZCL_GP_GPDF_STEP_UP_WITH_ON_OFF         = 0x37,
    EMBER_ZCL_GP_GPDF_STEP_DOWN_WITH_ON_OFF       = 0x38,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_STOP               = 0x40,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_UP                 = 0x41,
    EMBER_ZCL_GP_GPDF_MOVE_HUE_DOWN               = 0x42,
    EMBER_ZCL_GP_GPDF_STEP_HUE_UP                 = 0x43,
    EMBER_ZCL_GP_GPDF_STEP_HUE_DOWN               = 0x44,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_STOP        = 0x45,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_UP          = 0x46,
    EMBER_ZCL_GP_GPDF_MOVE_SATURATION_DOWN        = 0x47,
    EMBER_ZCL_GP_GPDF_STEP_SATURATION_UP          = 0x48,
    EMBER_ZCL_GP_GPDF_STEP_SATURATION_DOWN        = 0x49,
    EMBER_ZCL_GP_GPDF_MOVE_COLOR                  = 0x4A,
    EMBER_ZCL_GP_GPDF_STEP_COLOR                  = 0x4B,
    EMBER_ZCL_GP_GPDF_LOCK_DOOR                   = 0x50,
    EMBER_ZCL_GP_GPDF_UNLOCK_DOOR                 = 0x51,
    EMBER_ZCL_GP_GPDF_PRESS1_OF1                  = 0x60,
    EMBER_ZCL_GP_GPDF_RELEASE1_OF1                = 0x61,
    EMBER_ZCL_GP_GPDF_PRESS1_OF2                  = 0x62,
    EMBER_ZCL_GP_GPDF_RELEASE1_OF2                = 0x63,
    EMBER_ZCL_GP_GPDF_PRESS2_OF2                  = 0x64,
    EMBER_ZCL_GP_GPDF_RELEASE2_OF2                = 0x65,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS1_OF1            = 0x66,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS1_OF2            = 0x67,
    EMBER_ZCL_GP_GPDF_SHORT_PRESS2_OF2            = 0x68,
    EMBER_ZCL_GP_GPDF_8BITS_VECTOR_PRESS          = 0x69,
    EMBER_ZCL_GP_GPDF_8BITS_VECTOR_RELEASE        = 0x6A,
    EMBER_ZCL_GP_GPDF_ATTRIBUTE_REPORTING         = 0xA0,
    EMBER_ZCL_GP_GPDF_MFR_SP_ATTR_RPTG            = 0xA1,
    EMBER_ZCL_GP_GPDF_MULTI_CLUSTER_RPTG          = 0xA2,
    EMBER_ZCL_GP_GPDF_MFR_SP_MULTI_CLUSTER_RPTG   = 0xA3,
    EMBER_ZCL_GP_GPDF_REQUEST_ATTRIBUTE           = 0xA4,
    EMBER_ZCL_GP_GPDF_READ_ATTR_RESPONSE          = 0xA5,
    EMBER_ZCL_GP_GPDF_ZCL_TUNNELING_WITH_PAYLOAD  = 0xA6,
    EMBER_ZCL_GP_GPDF_COMPACT_ATTRIBUTE_REPORTING = 0xA8,
    EMBER_ZCL_GP_GPDF_ANY_GPD_SENSOR_CMD          = 0xAF,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD0            = 0xB0,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD1            = 0xB1,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD2            = 0xB2,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD3            = 0xB3,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD4            = 0xB4,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD5            = 0xB5,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD6            = 0xB6,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD7            = 0xB7,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD8            = 0xB8,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD9            = 0xB9,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_A           = 0xBA,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_B           = 0xBB,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_C           = 0xBC,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_D           = 0xBD,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_E           = 0xBE,
    EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_F           = 0xBF,
    EMBER_ZCL_GP_GPDF_COMMISSIONING               = 0xE0,
    EMBER_ZCL_GP_GPDF_DECOMMISSIONING             = 0xE1,
    EMBER_ZCL_GP_GPDF_SUCCESS                     = 0xE2,
    EMBER_ZCL_GP_GPDF_CHANNEL_REQUEST             = 0xE3,
    EMBER_ZCL_GP_GPDF_APPLICATION_DESCRIPTION     = 0xE4,
    EMBER_ZCL_GP_GPDF_COMMISSIONING_REPLY         = 0xF0,
    EMBER_ZCL_GP_GPDF_WRITE_ATTRIBUTES            = 0xF1,
    EMBER_ZCL_GP_GPDF_READ_ATTRIBUTES             = 0xF2,
    EMBER_ZCL_GP_GPDF_CHANNEL_CONFIGURATION       = 0xF3,
    EMBER_ZCL_GP_GPDF_ZCL_TUNNELING               = 0xF6,
} EmberAfGpGpdf;

// Enum for GpPairingConfigurationAction
typedef enum
{
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_NO_ACTION                = 0x00,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_EXTEND_SINK_TABLE_ENTRY  = 0x01,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REPLACE_SINK_TABLE_ENTRY = 0x02,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REMOVE_A_PAIRING         = 0x03,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_REMOVE_GPD               = 0x04,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_ACTION_APPLICATION_DESCRIPTION  = 0x05,
} EmberAfGpPairingConfigurationAction;

// Enum for GpPairingConfigurationOptionCommunicationMode
typedef enum
{
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_UNICAST_FORWARDING                       = 0x00,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_D_GROUP_ID       = 0x08,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_PRE_COMMISSIONED = 0x10,
    EMBER_ZCL_GP_PAIRING_CONFIGURATION_OPTION_COMMUNICATION_MODE_UNICAST_FORWARDING_LIGHTWEIGHT           = 0x18,
} EmberAfGpPairingConfigurationOptionCommunicationMode;

// Enum for GpPairingOptionsCommunicationMode
typedef enum
{
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_FULL_UNICAST_FORWARDING               = 0x00,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_D_GROUP_ID    = 0x01,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_GROUPCAST_FORWARDING_TO_PRE_COMM_UNIT = 0x10,
    EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_UNICAST_FORWARDING_BY_PROX_SUPPORT    = 0x11,
} EmberAfGpPairingOptionsCommunicationMode;

// Enum for GpProxyTableRequestOptionsRequestType
typedef enum
{
    EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_GPD_ID = 0x00,
    EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_INDEX  = 0x01,
} EmberAfGpProxyTableRequestOptionsRequestType;

// Enum for GpProxyTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_SUCCESS   = 0x00,
    EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_NOT_FOUND = 0x8B,
} EmberAfGpProxyTableResponseStatus;

// Enum for GpSecurityKeyType
typedef enum
{
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_NONE                       = 0x00,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_ZIGBEE_NETWORK_KEY         = 0x01,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_GPD_GROUP_KEY              = 0x02,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_NETWORK_DERIVED_GROUP_KEY  = 0x03,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_INDIVIDIGUAL_GPD_KEY       = 0x04,
    EMBER_ZCL_GP_SECURITY_KEY_TYPE_DERIVED_INDIVIDUAL_GPD_KEY = 0x07,
} EmberAfGpSecurityKeyType;

// Enum for GpSinkTableRequestOptions
typedef enum
{
    EMBER_ZCL_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TABLE_ENTRIES_BY_GPD_ID = 0x00,
    EMBER_ZCL_GP_SINK_TABLE_REQUEST_OPTIONS_REQUEST_TABLE_ENTRIES_BY_INDEX  = 0x01,
} EmberAfGpSinkTableRequestOptions;

// Enum for GpSinkTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_SINK_TABLE_RESPONSE_STATUS_SUCCESS   = 0x00,
    EMBER_ZCL_GP_SINK_TABLE_RESPONSE_STATUS_NOT_FOUND = 0x8B,
} EmberAfGpSinkTableResponseStatus;

// Enum for GpTranslationTableResponseStatus
typedef enum
{
    EMBER_ZCL_GP_TRANSLATION_TABLE_RESPONSE_STATUS_SUCCESS   = 0x00,
    EMBER_ZCL_GP_TRANSLATION_TABLE_RESPONSE_STATUS_NOT_FOUND = 0x8B,
} EmberAfGpTranslationTableResponseStatus;

// Enum for GpTranslationTableUpdateAction
typedef enum
{
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_ADD_TRANSLATION_TABLE_ENTRY     = 0x00,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_REPLACE_TRANSLATION_TABLE_ENTRY = 0x08,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_REMOVE_TRANSLATION_TABLE_ENTRY  = 0x10,
    EMBER_ZCL_GP_TRANSLATION_TABLE_UPDATE_ACTION_RESERVED                        = 0x18,
} EmberAfGpTranslationTableUpdateAction;

// Enum for HeatAndCoolingSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_INLET_TEMPERATURE_SENSOR_FAULT  = 0x50,
    EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_OUTLET_TEMPERATURE_SENSOR_FAULT = 0x51,
} EmberAfHeatAndCoolingSpecificAlarmGroups;

// Enum for HueDirection
typedef enum
{
    EMBER_ZCL_HUE_DIRECTION_SHORTEST_DISTANCE = 0x0,
    EMBER_ZCL_HUE_DIRECTION_LONGEST_DISTANCE  = 0x1,
    EMBER_ZCL_HUE_DIRECTION_UP                = 0x2,
    EMBER_ZCL_HUE_DIRECTION_DOWN              = 0x3,
} EmberAfHueDirection;

// Enum for HueMoveMode
typedef enum
{
    EMBER_ZCL_HUE_MOVE_MODE_STOP = 0x0,
    EMBER_ZCL_HUE_MOVE_MODE_UP   = 0x1,
    EMBER_ZCL_HUE_MOVE_MODE_DOWN = 0x3,
} EmberAfHueMoveMode;

// Enum for HueStepMode
typedef enum
{
    EMBER_ZCL_HUE_STEP_MODE_UP   = 0x1,
    EMBER_ZCL_HUE_STEP_MODE_DOWN = 0x3,
} EmberAfHueStepMode;

// Enum for IasAceAlarmStatus
typedef enum
{
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_NO_ALARM        = 0x0,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_BURGLAR         = 0x1,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE            = 0x2,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY       = 0x3,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_POLICE_PANIC    = 0x4,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE_PANIC      = 0x5,
    EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY_PANIC = 0x6,
} EmberAfIasAceAlarmStatus;

// Enum for IasAceArmMode
typedef enum
{
    EMBER_ZCL_IAS_ACE_ARM_MODE_DISARM                     = 0x0,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_DAY_HOME_ZONES_ONLY    = 0x1,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_NIGHT_SLEEP_ZONES_ONLY = 0x2,
    EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_ALL_ZONES              = 0x3,
} EmberAfIasAceArmMode;

// Enum for IasAceArmNotification
typedef enum
{
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_DISARMED           = 0x0,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_DAY_HOME_ZONES_ARMED    = 0x1,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_NIGHT_SLEEP_ZONES_ARMED = 0x2,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_ARMED              = 0x3,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_INVALID_ARM_DISARM_CODE      = 0x04,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_NOT_READY_TO_ARM             = 0x05,
    EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALREADY_DISARMED             = 0x06,
} EmberAfIasAceArmNotification;

// Enum for IasAceAudibleNotification
typedef enum
{
    EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_MUTE          = 0x0,
    EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_DEFAULT_SOUND = 0x1,
} EmberAfIasAceAudibleNotification;

// Enum for IasAceBypassResult
typedef enum
{
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_BYPASSED           = 0x0,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_NOT_BYPASSED       = 0x1,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_NOT_ALLOWED             = 0x2,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ZONE_ID         = 0x3,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_UNKNOWN_ZONE_ID         = 0x4,
    EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ARM_DISARM_CODE = 0x5,
} EmberAfIasAceBypassResult;

// Enum for IasAcePanelStatus
typedef enum
{
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_PANEL_DISARMED   = 0x00,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_STAY       = 0x01,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_NIGHT      = 0x02,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_AWAY       = 0x03,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_EXIT_DELAY       = 0x04,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ENTRY_DELAY      = 0x05,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_NOT_READY_TO_ARM = 0x06,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_IN_ALARM         = 0x07,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_STAY      = 0x08,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_NIGHT     = 0x09,
    EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_AWAY      = 0x0A,
} EmberAfIasAcePanelStatus;

// Enum for IasEnrollResponseCode
typedef enum
{
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_SUCCESS          = 0x0,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NOT_SUPPORTED    = 0x1,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NO_ENROLL_PERMIT = 0x2,
    EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_TOO_MANY_ZONES   = 0x3,
} EmberAfIasEnrollResponseCode;

// Enum for IasZoneState
typedef enum
{
    EMBER_ZCL_IAS_ZONE_STATE_NOT_ENROLLED = 0x0,
    EMBER_ZCL_IAS_ZONE_STATE_ENROLLED     = 0x1,
} EmberAfIasZoneState;

// Enum for IasZoneType
typedef enum
{
    EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_CIE              = 0x0,
    EMBER_ZCL_IAS_ZONE_TYPE_MOTION_SENSOR             = 0xd,
    EMBER_ZCL_IAS_ZONE_TYPE_CONTACT_SWITCH            = 0x15,
    EMBER_ZCL_IAS_ZONE_TYPE_FIRE_SENSOR               = 0x28,
    EMBER_ZCL_IAS_ZONE_TYPE_WATER_SENSOR              = 0x2a,
    EMBER_ZCL_IAS_ZONE_TYPE_GAS_SENSOR                = 0x2b,
    EMBER_ZCL_IAS_ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE = 0x2c,
    EMBER_ZCL_IAS_ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR = 0x2d,
    EMBER_ZCL_IAS_ZONE_TYPE_REMOTE_CONTROL            = 0x10f,
    EMBER_ZCL_IAS_ZONE_TYPE_KEY_FOB                   = 0x115,
    EMBER_ZCL_IAS_ZONE_TYPE_KEYPAD                    = 0x21d,
    EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_WARNING_DEVICE   = 0x225,
    EMBER_ZCL_IAS_ZONE_TYPE_GLASS_BREAK_SENSOR        = 0x226,
    EMBER_ZCL_IAS_ZONE_TYPE_CARBON_MONOXIDE_SENSOR    = 0x227,
    EMBER_ZCL_IAS_ZONE_TYPE_SECURITY_REPEATER         = 0x0229,
    EMBER_ZCL_IAS_ZONE_TYPE_INVALID_ZONE_TYPE         = 0xFFFF,
} EmberAfIasZoneType;

// Enum for IdentifyEffectIdentifier
typedef enum
{
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BLINK          = 0x00,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BREATHE        = 0x01,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_OKAY           = 0x02,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_CHANNEL_CHANGE = 0x0B,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT  = 0xFE,
    EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT    = 0xFF,
} EmberAfIdentifyEffectIdentifier;

// Enum for IdentifyEffectVariant
typedef enum
{
    EMBER_ZCL_IDENTIFY_EFFECT_VARIANT_DEFAULT = 0x00,
} EmberAfIdentifyEffectVariant;

// Enum for KeyIndex
typedef enum
{
    EMBER_ZCL_KEY_INDEX_DEVELOPMENT   = 0x00,
    EMBER_ZCL_KEY_INDEX_MASTER        = 0x04,
    EMBER_ZCL_KEY_INDEX_CERTIFICATION = 0x0F,
} EmberAfKeyIndex;

// Enum for KeypadLockout
typedef enum
{
    EMBER_ZCL_KEYPAD_LOCKOUT_NO_LOCKOUT          = 0x0,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_ONE_LOCKOUT   = 0x1,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_TWO_LOCKOUT   = 0x2,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_THREE_LOCKOUT = 0x3,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_FOUR_LOCKOUT  = 0x4,
    EMBER_ZCL_KEYPAD_LOCKOUT_LEVELFIVE_LOCKOUT   = 0x5,
} EmberAfKeypadLockout;

// Enum for LevelControlOptions
typedef enum
{
    EMBER_ZCL_LEVEL_CONTROL_OPTIONS_EXECUTE_IF_OFF             = 0x1,
    EMBER_ZCL_LEVEL_CONTROL_OPTIONS_COUPLE_COLOR_TEMP_TO_LEVEL = 0x02,
} EmberAfLevelControlOptions;

// Enum for LevelStatus
typedef enum
{
    EMBER_ZCL_LEVEL_STATUS_ON_TARGET    = 0x0,
    EMBER_ZCL_LEVEL_STATUS_BELOW_TARGET = 0x1,
    EMBER_ZCL_LEVEL_STATUS_ABOVE_TARGET = 0x2,
} EmberAfLevelStatus;

// Enum for LocationMethod
typedef enum
{
    EMBER_ZCL_LOCATION_METHOD_LATERATION        = 0x0,
    EMBER_ZCL_LOCATION_METHOD_SIGNPOSTING       = 0x1,
    EMBER_ZCL_LOCATION_METHOD_RF_FINGERPRINTING = 0x2,
    EMBER_ZCL_LOCATION_METHOD_OUT_OF_BAND       = 0x3,
} EmberAfLocationMethod;

// Enum for ManufacturerSpecificAlarmGroups
typedef enum
{
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_A = 0xB0,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_B = 0xB1,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_C = 0xB2,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_D = 0xB3,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_E = 0xB4,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_F = 0xB5,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_G = 0xB6,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_H = 0xB7,
    EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_I = 0xB8,
} EmberAfManufacturerSpecificAlarmGroups;

// Enum for MeasurementLightSensorType
typedef enum
{
    EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_PHOTODIODE = 0x0,
    EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_CMOS       = 0x1,
} EmberAfMeasurementLightSensorType;

// Enum for MessagingControlConfirmation
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_NOT_REQUIRED = 0x00,
    EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_REQUIRED     = 0x80,
} EmberAfMessagingControlConfirmation;

// Enum for MessagingControlEnhancedConfirmation
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_ENHANCED_CONFIRMATION_NOT_REQUIRED = 0x00,
    EMBER_ZCL_MESSAGING_CONTROL_ENHANCED_CONFIRMATION_REQUIRED     = 0x20,
} EmberAfMessagingControlEnhancedConfirmation;

// Enum for MessagingControlImportance
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_LOW      = 0x00,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_MEDIUM   = 0x04,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_HIGH     = 0x08,
    EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_CRITICAL = 0x0C,
} EmberAfMessagingControlImportance;

// Enum for MessagingControlTransmission
typedef enum
{
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL               = 0x00,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL_AND_ANONYMOUS = 0x01,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_ANONYMOUS            = 0x02,
    EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_RESERVED             = 0x03,
} EmberAfMessagingControlTransmission;

// Enum for MeterDeviceType
typedef enum
{
    EMBER_ZCL_METER_DEVICE_TYPE_ELECTRIC_METER          = 0x00,
    EMBER_ZCL_METER_DEVICE_TYPE_GAS_METER               = 0x01,
    EMBER_ZCL_METER_DEVICE_TYPE_WATER_METER             = 0x02,
    EMBER_ZCL_METER_DEVICE_TYPE_THERMAL_METER           = 0x03,
    EMBER_ZCL_METER_DEVICE_TYPE_PRESSURE_METER          = 0x04,
    EMBER_ZCL_METER_DEVICE_TYPE_HEAT_METER              = 0x05,
    EMBER_ZCL_METER_DEVICE_TYPE_COOLING_METER           = 0x06,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_GAS_METER      = 0x80,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_WATER_METER    = 0x81,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_THERMAL_METER  = 0x82,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_PRESSURE_METER = 0x83,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_HEAT_METER     = 0x84,
    EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_COOLING_METER  = 0x85,
    EMBER_ZCL_METER_DEVICE_TYPE_UNDEFINED_MIRROR_METER  = 0xFE,
} EmberAfMeterDeviceType;

// Enum for MeterTypeId
typedef enum
{
    EMBER_ZCL_METER_TYPE_ID_UTILITY_PRIMARY_METER    = 0x0000,
    EMBER_ZCL_METER_TYPE_ID_UTILITY_PRODUCTION_METER = 0x0001,
    EMBER_ZCL_METER_TYPE_ID_UTILITY_SECONDARY_METER  = 0x0002,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRIMARY_METER    = 0x0100,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRODUCTION_METER = 0x0101,
    EMBER_ZCL_METER_TYPE_ID_PRIVATE_SECONDARY_METERS = 0x0102,
    EMBER_ZCL_METER_TYPE_ID_GENERIC_METER            = 0x0110,
} EmberAfMeterTypeId;

// Enum for MeteringAlarmCode
typedef enum
{
    EMBER_ZCL_METERING_ALARM_CODE_CHECK_METER                                  = 0x00,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_BATTERY                                  = 0x01,
    EMBER_ZCL_METERING_ALARM_CODE_TAMPER_DETECT                                = 0x02,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_FAILURE_PIPE_EMPTY_TEMPERATURE_SENSOR  = 0x03,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_QUALITY_LOW_PRESSURE_BURST_DETECT      = 0x04,
    EMBER_ZCL_METERING_ALARM_CODE_LEAK_DETECT                                  = 0x05,
    EMBER_ZCL_METERING_ALARM_CODE_SERVICE_DISCONNECT                           = 0x06,
    EMBER_ZCL_METERING_ALARM_CODE_REVERSE_FLOW_FLOW_SENSOR                     = 0x07,
    EMBER_ZCL_METERING_ALARM_CODE_METER_COVER_REMOVED                          = 0x08,
    EMBER_ZCL_METERING_ALARM_CODE_METER_COVER_CLOSED                           = 0x09,
    EMBER_ZCL_METERING_ALARM_CODE_STRONG_MAGNETIC_FIELD                        = 0x0A,
    EMBER_ZCL_METERING_ALARM_CODE_NO_STRONG_MAGNETIC_FIELD                     = 0x0B,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_FAILURE                              = 0x0C,
    EMBER_ZCL_METERING_ALARM_CODE_PROGRAM_MEMORY_ERROR                         = 0x0D,
    EMBER_ZCL_METERING_ALARM_CODE_RAM_ERROR                                    = 0x0E,
    EMBER_ZCL_METERING_ALARM_CODE_NV_MEMORY_ERROR                              = 0x0F,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L1                               = 0x10,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L1                              = 0x11,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L2                               = 0x12,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L2                              = 0x13,
    EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L3                               = 0x14,
    EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L3                              = 0x15,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L1                              = 0x16,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L2                              = 0x17,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L3                              = 0x18,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L1                         = 0x19,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L1                        = 0x1A,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L2                         = 0x1B,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L2                        = 0x1C,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L3                         = 0x1D,
    EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L3                        = 0x1E,
    EMBER_ZCL_METERING_ALARM_CODE_GROUND_FAULT                                 = 0x1F,
    EMBER_ZCL_METERING_ALARM_CODE_ELECTRIC_TAMPER_DETECT                       = 0x20,
    EMBER_ZCL_METERING_ALARM_CODE_INCORRECT_POLARITY                           = 0x21,
    EMBER_ZCL_METERING_ALARM_CODE_CURRENT_NO_VOLTAGE                           = 0x22,
    EMBER_ZCL_METERING_ALARM_CODE_UNDER_VOLTAGE                                = 0x23,
    EMBER_ZCL_METERING_ALARM_CODE_OVER_VOLTAGE                                 = 0x24,
    EMBER_ZCL_METERING_ALARM_CODE_NORMAL_VOLTAGE                               = 0x25,
    EMBER_ZCL_METERING_ALARM_CODE_PF_BELOW_THRESHOLD                           = 0x26,
    EMBER_ZCL_METERING_ALARM_CODE_PF_ABOVE_THRESHOLD                           = 0x27,
    EMBER_ZCL_METERING_ALARM_CODE_TERMINAL_COVER_REMOVED                       = 0x28,
    EMBER_ZCL_METERING_ALARM_CODE_TERMINAL_COVER_CLOSED                        = 0x29,
    EMBER_ZCL_METERING_ALARM_CODE_BURST_DETECT                                 = 0x30,
    EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_LOW                             = 0x31,
    EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_HIGH                            = 0x32,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_COMMUNICATION_ERROR              = 0x33,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_MEASUREMENT_FAULT                = 0x34,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_REVERSE_FLOW                     = 0x35,
    EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_AIR_DETECT                       = 0x36,
    EMBER_ZCL_METERING_ALARM_CODE_PIPE_EMPTY                                   = 0x37,
    EMBER_ZCL_METERING_ALARM_CODE_INLET_TEMPERATURE_SENSOR_FAULT               = 0x50,
    EMBER_ZCL_METERING_ALARM_CODE_OUTLET_TEMPERATURE_SENSOR_FAULT              = 0x51,
    EMBER_ZCL_METERING_ALARM_CODE_TILT_TAMPER                                  = 0x60,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_COVER_REMOVED                        = 0x61,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_COVER_CLOSED                         = 0x62,
    EMBER_ZCL_METERING_ALARM_CODE_EXCESS_FLOW                                  = 0x63,
    EMBER_ZCL_METERING_ALARM_CODE_TILT_TAMPER_ENDED                            = 0x64,
    EMBER_ZCL_METERING_ALARM_CODE_MEASUREMENT_SYSTEM_ERROR                     = 0x70,
    EMBER_ZCL_METERING_ALARM_CODE_WATCHDOG_ERROR                               = 0x71,
    EMBER_ZCL_METERING_ALARM_CODE_SUPPLY_DISCONNECT_FAILURE                    = 0x72,
    EMBER_ZCL_METERING_ALARM_CODE_SUPPLY_CONNECT_FAILURE                       = 0x73,
    EMBER_ZCL_METERING_ALARM_CODE_MEASURMENT_SOFTWARE_CHANGED                  = 0x74,
    EMBER_ZCL_METERING_ALARM_CODE_DST_ENABLED                                  = 0x75,
    EMBER_ZCL_METERING_ALARM_CODE_DST_DISABLED                                 = 0x76,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_ADJ_BACKWARD                           = 0x77,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_ADJ_FORWARD                            = 0x78,
    EMBER_ZCL_METERING_ALARM_CODE_CLOCK_INVALID                                = 0x79,
    EMBER_ZCL_METERING_ALARM_CODE_COMMUNICATION_ERROR_HAN                      = 0x7A,
    EMBER_ZCL_METERING_ALARM_CODE_COMMUNICATION_OK_H_AN                        = 0x7B,
    EMBER_ZCL_METERING_ALARM_CODE_METER_FRAUD_ATTEMPT                          = 0x7C,
    EMBER_ZCL_METERING_ALARM_CODE_POWER_LOSS                                   = 0x7D,
    EMBER_ZCL_METERING_ALARM_CODE_UNUSUAL_HAN_TRAFFIC                          = 0x7E,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_CLOCK_CHANGE                      = 0x7F,
    EMBER_ZCL_METERING_ALARM_CODE_COMMS_USING_UNAUTHENTICATED_COMPONENT        = 0x80,
    EMBER_ZCL_METERING_ALARM_CODE_ERROR_REG_CLEAR                              = 0x81,
    EMBER_ZCL_METERING_ALARM_CODE_ALARM_REG_CLEAR                              = 0x82,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_HW_RESET                          = 0x83,
    EMBER_ZCL_METERING_ALARM_CODE_UNEXPECTED_PROGRAM_EXECUTION                 = 0x84,
    EMBER_ZCL_METERING_ALARM_CODE_EVENT_LOG_CLEARED                            = 0x85,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_EXCEEDED                     = 0x86,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_OK                           = 0x87,
    EMBER_ZCL_METERING_ALARM_CODE_LIMIT_THRESHOLD_CHANGED                      = 0x88,
    EMBER_ZCL_METERING_ALARM_CODE_MAXIMUM_DEMAND_EXCEEDED                      = 0x89,
    EMBER_ZCL_METERING_ALARM_CODE_PROFILE_CLEARED                              = 0x8A,
    EMBER_ZCL_METERING_ALARM_CODE_SAMPLING_BUFFERCLEARED                       = 0x8B,
    EMBER_ZCL_METERING_ALARM_CODE_BATTERY_WARNING                              = 0x8C,
    EMBER_ZCL_METERING_ALARM_CODE_WRONG_SIGNATURE                              = 0x8D,
    EMBER_ZCL_METERING_ALARM_CODE_NO_SIGNATURE                                 = 0x8E,
    EMBER_ZCL_METERING_ALARM_CODE_UNAUTHORISED_ACTIONFROM_HAN                  = 0x8F,
    EMBER_ZCL_METERING_ALARM_CODE_FAST_POLLING_START                           = 0x90,
    EMBER_ZCL_METERING_ALARM_CODE_FAST_POLLING_END                             = 0x91,
    EMBER_ZCL_METERING_ALARM_CODE_METER_REPORTING_INTERVAL_CHANGED             = 0x92,
    EMBER_ZCL_METERING_ALARM_CODE_DISCONNECT_DUETO_LOAD_LIMIT                  = 0x93,
    EMBER_ZCL_METERING_ALARM_CODE_METER_SUPPLY_STATUS_REGISTER_CHANGED         = 0x94,
    EMBER_ZCL_METERING_ALARM_CODE_METER_ALARM_STATUS_REGISTER_CHANGED          = 0x95,
    EMBER_ZCL_METERING_ALARM_CODE_EXTENDED_METER_ALARM_STATUS_REGISTER_CHANGED = 0x96,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_A                      = 0xB0,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_B                      = 0xB1,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_C                      = 0xB2,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_D                      = 0xB3,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_E                      = 0xB4,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_F                      = 0xB5,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_G                      = 0xB6,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_H                      = 0xB7,
    EMBER_ZCL_METERING_ALARM_CODE_MANUFACTURER_SPECIFIC_I                      = 0xB8,
} EmberAfMeteringAlarmCode;

// Enum for MeteringBlockEnumerations
typedef enum
{
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_NO_BLOCKS_IN_USE = 0x00,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK1           = 0x01,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK2           = 0x02,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK3           = 0x03,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK4           = 0x04,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK5           = 0x05,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK6           = 0x06,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK7           = 0x07,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK8           = 0x08,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK9           = 0x09,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK10          = 0x0A,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK11          = 0x0B,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK12          = 0x0C,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK13          = 0x0D,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK14          = 0x0E,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK15          = 0x0F,
    EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK16          = 0x10,
} EmberAfMeteringBlockEnumerations;

// Enum for MeteringConsumptionStatus
typedef enum
{
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_LOW_ENERGY_USAGE    = 0x00,
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_MEDIUM_ENERGY_USAGE = 0x01,
    EMBER_ZCL_METERING_CONSUMPTION_STATUS_HIGH_ENERGY_USAGE   = 0x02,
} EmberAfMeteringConsumptionStatus;

// Enum for MeteringDeviceType
typedef enum
{
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING                            = 0x00,
    EMBER_ZCL_METERING_DEVICE_TYPE_GAS_METERING                                 = 0x01,
    EMBER_ZCL_METERING_DEVICE_TYPE_WATER_METERING                               = 0x02,
    EMBER_ZCL_METERING_DEVICE_TYPE_THERMAL_METERING                             = 0x03,
    EMBER_ZCL_METERING_DEVICE_TYPE_PRESSURE_METERING                            = 0x04,
    EMBER_ZCL_METERING_DEVICE_TYPE_HEAT_METERING                                = 0x05,
    EMBER_ZCL_METERING_DEVICE_TYPE_COOLING_METERING                             = 0x06,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_VEHICLE_CHARGING_METERING           = 0x07,
    EMBER_ZCL_METERING_DEVICE_TYPE_PV_GENERATION_METERING                       = 0x08,
    EMBER_ZCL_METERING_DEVICE_TYPE_WIND_TURBINE_GENERATION_METERING             = 0x09,
    EMBER_ZCL_METERING_DEVICE_TYPE_WATER_TURBINE_GENERATION_METERING            = 0x0A,
    EMBER_ZCL_METERING_DEVICE_TYPE_MICRO_GENERATION_METERING                    = 0x0B,
    EMBER_ZCL_METERING_DEVICE_TYPE_SOLAR_HOT_WATER_GENERATION_METERING          = 0x0C,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT1                   = 0x0D,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT2                   = 0x0E,
    EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING_ELEMENT3                   = 0x0F,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING                   = 0x7F,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_GAS_METERING                        = 0x80,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_METERING                      = 0x81,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_THERMAL_METERING                    = 0x82,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PRESSURE_METERING                   = 0x83,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_HEAT_METERING                       = 0x84,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_COOLING_METERING                    = 0x85,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_VEHICLE_CHARGING_METERING  = 0x86,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PV_GENERATION_METERING              = 0x87,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WIND_TURBINE_GENERATION_METERING    = 0x88,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_TURBINE_GENERATION_METERING   = 0x89,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_MICRO_GENERATION_METERING           = 0x8A,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_SOLAR_HOT_WATER_GENERATION_METERING = 0x8B,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT1          = 0x8C,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT2          = 0x8D,
    EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_METERING_ELEMENT3          = 0x8E,
    EMBER_ZCL_METERING_DEVICE_TYPE_UNDEFINED_MIRROR_METER                       = 0xFE,
} EmberAfMeteringDeviceType;

// Enum for MeteringSupplyStatus
typedef enum
{
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF       = 0x00,
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 0x01,
    EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_ON        = 0x02,
} EmberAfMeteringSupplyStatus;

// Enum for MeteringTemperatureUnitOfMeasure
typedef enum
{
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN         = 0x00,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS        = 0x01,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT     = 0x02,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN_BCD     = 0x80,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS_BCD    = 0x81,
    EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT_BCD = 0x82,
} EmberAfMeteringTemperatureUnitOfMeasure;

// Enum for MoveMode
typedef enum
{
    EMBER_ZCL_MOVE_MODE_UP   = 0x0,
    EMBER_ZCL_MOVE_MODE_DOWN = 0x1,
} EmberAfMoveMode;

// Enum for NotificationScheme
typedef enum
{
    EMBER_ZCL_NOTIFICATION_SCHEME_NO_NOTIFICATION_SCHEME_DEFINED   = 0x00,
    EMBER_ZCL_NOTIFICATION_SCHEME_PREDEFINED_NOTIFICATION_SCHEME_A = 0x01,
    EMBER_ZCL_NOTIFICATION_SCHEME_PREDEFINED_NOTIFICATION_SCHEME_B = 0x02,
} EmberAfNotificationScheme;

// Enum for OccupancySensorType
typedef enum
{
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR                = 0x0,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_ULTRASONIC         = 0x1,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR_AND_ULTRASONIC = 0x2,
    EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PHYSICAL_CONTACT   = 0x3,
} EmberAfOccupancySensorType;

// Enum for OnOffDelayedAllOffEffectVariant
typedef enum
{
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_FADE_TO_OFF_IN_0P8_SECONDS                                        = 0x00,
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_NO_FADE                                                           = 0x01,
    EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_50_PERCENT_DIM_DOWN_IN_0P8_SECONDS_THEN_FADE_TO_OFF_IN_12_SECONDS = 0x02,
} EmberAfOnOffDelayedAllOffEffectVariant;

// Enum for OnOffDyingLightEffectVariant
typedef enum
{
    EMBER_ZCL_ON_OFF_DYING_LIGHT_EFFECT_VARIANT_20_PERCENTER_DIM_UP_IN_0P5_SECONDS_THEN_FADE_TO_OFF_IN_1_SECOND = 0x00,
} EmberAfOnOffDyingLightEffectVariant;

// Enum for OnOffEffectIdentifier
typedef enum
{
    EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DELAYED_ALL_OFF = 0x00,
    EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DYING_LIGHT     = 0x01,
} EmberAfOnOffEffectIdentifier;

// Enum for OperatingMode
typedef enum
{
    EMBER_ZCL_OPERATING_MODE_NORMAL    = 0x0,
    EMBER_ZCL_OPERATING_MODE_CONFIGURE = 0x1,
} EmberAfOperatingMode;

// Enum for OriginatingDevice
typedef enum
{
    EMBER_ZCL_ORIGINATING_DEVICE_ENERGY_SERVICE_INTERFACE = 0x00,
    EMBER_ZCL_ORIGINATING_DEVICE_METER                    = 0x01,
    EMBER_ZCL_ORIGINATING_DEVICE_IN_HOME_DISPLAY_DEVICE   = 0x02,
} EmberAfOriginatingDevice;

// Enum for PasswordType
typedef enum
{
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD1_SERVICE_MENU_ACCESS  = 0x01,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD2_CONSUMER_MENU_ACCESS = 0x02,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD3                      = 0x03,
    EMBER_ZCL_PASSWORD_TYPE_PASSWORD4                      = 0x04,
} EmberAfPasswordType;

// Enum for PaymentDiscountDuration
typedef enum
{
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_BILLING_PERIOD    = 0x00,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_CONSOLIDATED_BILL = 0x01,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_MONTH                 = 0x02,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_QUARTER               = 0x03,
    EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_YEAR                  = 0x04,
} EmberAfPaymentDiscountDuration;

// Enum for PhysicalEnvironment
typedef enum
{
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNSPECIFIED                   = 0x0,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_FIRST_PROFILE_SPECIFIED_VALUE = 0x1,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_LAST_PROFILE_SPECIFIED_VALUE  = 0x7f,
    EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNKNOWN                       = 0xff,
} EmberAfPhysicalEnvironment;

// Enum for PowerProfileState
typedef enum
{
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_WAITING_TO_START = 0x01,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_STARTED          = 0x02,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_RUNNING           = 0x03,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_ENDED             = 0x04,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_WAITING_TO_START  = 0x05,
    EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_STARTED           = 0x06,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_ENDED            = 0x07,
    EMBER_ZCL_POWER_PROFILE_STATE_PROFILE_READY_FOR_SCHEDULING   = 0x08,
    EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_SCHEDULED        = 0x09,
} EmberAfPowerProfileState;

// Enum for PowerSource
typedef enum
{
    EMBER_ZCL_POWER_SOURCE_UNKNOWN                         = 0x0,
    EMBER_ZCL_POWER_SOURCE_SINGLE_PHASE_MAINS              = 0x1,
    EMBER_ZCL_POWER_SOURCE_THREE_PHASE_MAINS               = 0x2,
    EMBER_ZCL_POWER_SOURCE_BATTERY                         = 0x3,
    EMBER_ZCL_POWER_SOURCE_DC_SOURCE                       = 0x4,
    EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_CONSTANT_POWER  = 0x5,
    EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_TRANSFER_SWITCH = 0x6,
    EMBER_ZCL_POWER_SOURCE_BATTERY_BACKUP                  = 0x80,
} EmberAfPowerSource;

// Enum for PrePayGenericAlarmGroup
typedef enum
{
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_LOW_CREDIT                 = 0x00,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_NO_CREDIT                  = 0x01,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_CREDIT_EXHAUSTED           = 0x02,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_ENABLED   = 0x03,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_EXHAUSTED = 0x04,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_IHD_LOW_CREDIT_WARNING     = 0x05,
    EMBER_ZCL_PRE_PAY_GENERIC_ALARM_GROUP_EVENT_LOG_CLEARED          = 0x06,
} EmberAfPrePayGenericAlarmGroup;

// Enum for PrepayEventAlarmGroup
typedef enum
{
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_PHYSICAL_ATTACK_ON_THE_PREPAY_METER   = 0x20,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ELECTRONIC_ATTACK_ON_THE_PREPAY_METER = 0x21,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DISCOUNT_APPLIED                      = 0x22,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_CREDIT_ADJUSTMENT                     = 0x23,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_CREDIT_ADJUSTMENT_FAIL                = 0x24,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DEBT_ADJUSTMENT                       = 0x25,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DEBT_ADJUSTMENT_FAIL                  = 0x26,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_CHANGE                           = 0x27,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_CODE_ERROR                      = 0x28,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_ALREADY_USED                    = 0x29,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_TOPUP_CODE_INVALID                    = 0x2A,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_IN_USE                = 0x2B,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_PERIOD_END_WARNING    = 0x2C,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_FRIENDLY_CREDIT_PERIOD_END            = 0x2D,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ERROR_REG_CLEAR                       = 0x30,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ALARM_REG_CLEAR                       = 0x31,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_PREPAY_CLUSTER_NOT_FOUND              = 0x32,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_CREDIT2_PREPAY                   = 0x41,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_PREPAY2_CREDIT                   = 0x42,
    EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_MODE_DEFAULT                          = 0x43,
} EmberAfPrepayEventAlarmGroup;

// Enum for PrepaySnapshotPayloadType
typedef enum
{
    EMBER_ZCL_PREPAY_SNAPSHOT_PAYLOAD_TYPE_DEBT_CREDIT_STATUS = 0x00,
    EMBER_ZCL_PREPAY_SNAPSHOT_PAYLOAD_TYPE_NOT_USED           = 0xFF,
} EmberAfPrepaySnapshotPayloadType;

// Enum for PrepaySwitchAlarmGroup
typedef enum
{
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ON                           = 0x10,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ARM                          = 0x11,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_OFF                          = 0x12,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTION_FAILURE               = 0x13,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTED_DUE_TO_TAMPER_DETECTED = 0x14,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTED_DUE_TO_CUT_OFF_VALUE   = 0x15,
    EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_REMOTE_DISCONNECTED                 = 0x16,
} EmberAfPrepaySwitchAlarmGroup;

// Enum for PriceControlAcknowledgement
typedef enum
{
    EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_NOT_REQUIRED = 0x00,
    EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_REQUIRED     = 0x01,
} EmberAfPriceControlAcknowledgement;

// Enum for PriceTier
typedef enum
{
    EMBER_ZCL_PRICE_TIER_NO_TIER_RELATED                    = 0x00,
    EMBER_ZCL_PRICE_TIER_TIER1_PRICE_LABEL                  = 0x01,
    EMBER_ZCL_PRICE_TIER_TIER2_PRICE_LABEL                  = 0x02,
    EMBER_ZCL_PRICE_TIER_TIER3_PRICE_LABEL                  = 0x03,
    EMBER_ZCL_PRICE_TIER_TIER4_PRICE_LABEL                  = 0x04,
    EMBER_ZCL_PRICE_TIER_TIER5_PRICE_LABEL                  = 0x05,
    EMBER_ZCL_PRICE_TIER_TIER6_PRICE_LABEL                  = 0x06,
    EMBER_ZCL_PRICE_TIER_TIER7_PRICE_LABEL                  = 0x07,
    EMBER_ZCL_PRICE_TIER_TIER8_PRICE_LABEL                  = 0x08,
    EMBER_ZCL_PRICE_TIER_TIER9_PRICE_LABEL                  = 0x09,
    EMBER_ZCL_PRICE_TIER_TIER10_PRICE_LABEL                 = 0x0A,
    EMBER_ZCL_PRICE_TIER_TIER11_PRICE_LABEL                 = 0x0B,
    EMBER_ZCL_PRICE_TIER_TIER12_PRICE_LABEL                 = 0x0C,
    EMBER_ZCL_PRICE_TIER_TIER13_PRICE_LABEL                 = 0x0D,
    EMBER_ZCL_PRICE_TIER_TIER14_PRICE_LABEL                 = 0x0E,
    EMBER_ZCL_PRICE_TIER_REFER_TO_EXTENDED_PRICE_TIER_FIELD = 0x0F,
    EMBER_ZCL_PRICE_TIER_TIER15_PRICE_LABEL                 = 0x0F,
} EmberAfPriceTier;

// Enum for ProductCode
typedef enum
{
    EMBER_ZCL_PRODUCT_CODE_MANUFACTURER_DEFINED        = 0x00,
    EMBER_ZCL_PRODUCT_CODE_ITERNATIONAL_ARTICLE_NUMBER = 0x01,
    EMBER_ZCL_PRODUCT_CODE_GLOBAL_TRADE_ITEM_NUMBER    = 0x02,
    EMBER_ZCL_PRODUCT_CODE_UNIVERSAL_PRODUCT_CODE      = 0x03,
    EMBER_ZCL_PRODUCT_CODE_STOCK_KEEPING_UNIT          = 0x04,
} EmberAfProductCode;

// Enum for ProductTypeId
typedef enum
{
    EMBER_ZCL_PRODUCT_TYPE_ID_WHITE_GOODS          = 0x0000,
    EMBER_ZCL_PRODUCT_TYPE_ID_DISHWASHER           = 0x5601,
    EMBER_ZCL_PRODUCT_TYPE_ID_TUMBLE_DRYER         = 0x5602,
    EMBER_ZCL_PRODUCT_TYPE_ID_WASHER_DRYER         = 0x5603,
    EMBER_ZCL_PRODUCT_TYPE_ID_WASHING_MACHINE      = 0x5604,
    EMBER_ZCL_PRODUCT_TYPE_ID_HOBS                 = 0x5E03,
    EMBER_ZCL_PRODUCT_TYPE_ID_INDUCTION_HOBS       = 0x5E09,
    EMBER_ZCL_PRODUCT_TYPE_ID_OVEN                 = 0x5E01,
    EMBER_ZCL_PRODUCT_TYPE_ID_ELECTRICAL_OVEN      = 0x5E06,
    EMBER_ZCL_PRODUCT_TYPE_ID_REFRIGERATOR_FREEZER = 0x6601,
} EmberAfProductTypeId;

// Enum for ProposedSupplyStatus
typedef enum
{
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_RESERVED         = 0x00,
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 0x01,
    EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_ON        = 0x02,
} EmberAfProposedSupplyStatus;

// Enum for PublishCppEventCppAuth
typedef enum
{
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_PENDING  = 0x00,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_ACCEPTED = 0x01,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_REJECTED = 0x02,
    EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_FORCED   = 0x03,
} EmberAfPublishCppEventCppAuth;

// Enum for PumpControlMode
typedef enum
{
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_SPEED        = 0x0,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_PRESSURE     = 0x1,
    EMBER_ZCL_PUMP_CONTROL_MODE_PROPORTIONAL_PRESSURE = 0x2,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_FLOW         = 0x3,
    EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_TEMPERATURE  = 0x5,
    EMBER_ZCL_PUMP_CONTROL_MODE_AUTOMATIC             = 0x7,
} EmberAfPumpControlMode;

// Enum for PumpOperationMode
typedef enum
{
    EMBER_ZCL_PUMP_OPERATION_MODE_NORMAL  = 0x0,
    EMBER_ZCL_PUMP_OPERATION_MODE_MINIMUM = 0x1,
    EMBER_ZCL_PUMP_OPERATION_MODE_MAXIMUM = 0x2,
    EMBER_ZCL_PUMP_OPERATION_MODE_LOCAL   = 0x3,
} EmberAfPumpOperationMode;

// Enum for PushHistoricalMeteringData
typedef enum
{
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_DAY   = 0x0040,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_WEEK  = 0x0080,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_MONTH = 0x0180,
    EMBER_ZCL_PUSH_HISTORICAL_METERING_DATA_YEAR  = 0x01C0,
} EmberAfPushHistoricalMeteringData;

// Enum for PushHistoricalPaymentData
typedef enum
{
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_DAY   = 0x0200,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_WEEK  = 0x0400,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_MONTH = 0x0C00,
    EMBER_ZCL_PUSH_HISTORICAL_PAYMENT_DATA_YEAR  = 0x0E00,
} EmberAfPushHistoricalPaymentData;

// Enum for RegisterTier
typedef enum
{
    EMBER_ZCL_REGISTER_TIER_NO_TIER_RELATED                              = 0x00,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER1_SUMMATION_DELIVERED_ATTRIBUTE  = 0x01,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER2_SUMMATION_DELIVERED_ATTRIBUTE  = 0x02,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER3_SUMMATION_DELIVERED_ATTRIBUTE  = 0x03,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER4_SUMMATION_DELIVERED_ATTRIBUTE  = 0x04,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER5_SUMMATION_DELIVERED_ATTRIBUTE  = 0x05,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER6_SUMMATION_DELIVERED_ATTRIBUTE  = 0x06,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER7_SUMMATION_DELIVERED_ATTRIBUTE  = 0x07,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER8_SUMMATION_DELIVERED_ATTRIBUTE  = 0x08,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER9_SUMMATION_DELIVERED_ATTRIBUTE  = 0x09,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER10_SUMMATION_DELIVERED_ATTRIBUTE = 0x0A,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER11_SUMMATION_DELIVERED_ATTRIBUTE = 0x0B,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER12_SUMMATION_DELIVERED_ATTRIBUTE = 0x0C,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER13_SUMMATION_DELIVERED_ATTRIBUTE = 0x0D,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER14_SUMMATION_DELIVERED_ATTRIBUTE = 0x0E,
    EMBER_ZCL_REGISTER_TIER_REFER_TO_EXTENDED_REGISTER_TIER_FIELD        = 0x0F,
    EMBER_ZCL_REGISTER_TIER_CURRENT_TIER15_SUMMATION_DELIVERED_ATTRIBUTE = 0x0F,
} EmberAfRegisterTier;

// Enum for RelativeHumidityDisplay
typedef enum
{
    EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_NOT_DISPLAYED = 0x0,
    EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_DISPLAYED     = 0x1,
} EmberAfRelativeHumidityDisplay;

// Enum for RelativeHumidityMode
typedef enum
{
    EMBER_ZCL_RELATIVE_HUMIDITY_MODE_MEASURE_LOCALLY          = 0x0,
    EMBER_ZCL_RELATIVE_HUMIDITY_MODE_UPDATED_OVER_THE_NETWORK = 0x1,
} EmberAfRelativeHumidityMode;

// Enum for RemoteEnableFlags
typedef enum
{
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_DISABLED                          = 0x00,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_TEMPORARILY_LOCKED_DISABLED       = 0x07,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_CONTROL            = 0x0F,
    EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_AND_ENERGY_CONTROL = 0x01,
} EmberAfRemoteEnableFlags;

// Enum for RepaymentDebtType
typedef enum
{
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT1     = 0x00,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT2     = 0x01,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_DEBT3     = 0x02,
    EMBER_ZCL_REPAYMENT_DEBT_TYPE_ALL_DEBTS = 0xFF,
} EmberAfRepaymentDebtType;

// Enum for ReportingDirection
typedef enum
{
    EMBER_ZCL_REPORTING_DIRECTION_REPORTED = 0x00,
    EMBER_ZCL_REPORTING_DIRECTION_RECEIVED = 0x01,
} EmberAfReportingDirection;

// Enum for ResultType
typedef enum
{
    EMBER_ZCL_RESULT_TYPE_ACCEPTED                        = 0x00,
    EMBER_ZCL_RESULT_TYPE_REJECTED_INVALID_TOP_UP         = 0x01,
    EMBER_ZCL_RESULT_TYPE_REJECTED_DUPLICATE_TOP_UP       = 0x02,
    EMBER_ZCL_RESULT_TYPE_REJECTED_ERROR                  = 0x03,
    EMBER_ZCL_RESULT_TYPE_REJECTED_MAX_CREDIT_REACHED     = 0x04,
    EMBER_ZCL_RESULT_TYPE_REJECTED_KEYPAD_LOCK            = 0x05,
    EMBER_ZCL_RESULT_TYPE_REJECTED_TOP_UP_VALUE_TOO_LARGE = 0x06,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_ENABLED         = 0x10,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_DISABLED        = 0x11,
    EMBER_ZCL_RESULT_TYPE_ACCEPTED_SUPPLY_ARMED           = 0x12,
} EmberAfResultType;

// Enum for SampleType
typedef enum
{
    EMBER_ZCL_SAMPLE_TYPE_CONSUMPTION_DELIVERED = 0x00,
} EmberAfSampleType;

// Enum for SaturationMoveMode
typedef enum
{
    EMBER_ZCL_SATURATION_MOVE_MODE_STOP = 0x0,
    EMBER_ZCL_SATURATION_MOVE_MODE_UP   = 0x1,
    EMBER_ZCL_SATURATION_MOVE_MODE_DOWN = 0x3,
} EmberAfSaturationMoveMode;

// Enum for SaturationStepMode
typedef enum
{
    EMBER_ZCL_SATURATION_STEP_MODE_UP   = 0x1,
    EMBER_ZCL_SATURATION_STEP_MODE_DOWN = 0x3,
} EmberAfSaturationStepMode;

// Enum for SensingLightSensorType
typedef enum
{
    EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_PHOTODIODE = 0x0,
    EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_CMOS       = 0x1,
} EmberAfSensingLightSensorType;

// Enum for SetpointAdjustMode
typedef enum
{
    EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_SETPOINT           = 0x0,
    EMBER_ZCL_SETPOINT_ADJUST_MODE_COOL_SETPOINT           = 0x1,
    EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_AND_COOL_SETPOINTS = 0x2,
} EmberAfSetpointAdjustMode;

// Enum for SignatureType
typedef enum
{
    EMBER_ZCL_SIGNATURE_TYPE_RESERVED = 0x00,
    EMBER_ZCL_SIGNATURE_TYPE_ECDSA    = 0x01,
} EmberAfSignatureType;

// Enum for SnapshotConfirmation
typedef enum
{
    EMBER_ZCL_SNAPSHOT_CONFIRMATION_ACCEPTED                     = 0x00,
    EMBER_ZCL_SNAPSHOT_CONFIRMATION_SNAPSHOT_CAUSE_NOT_SUPPORTED = 0x01,
} EmberAfSnapshotConfirmation;

// Enum for SnapshotPayloadType
typedef enum
{
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_DELIVERED_REGISTERS            = 0x00,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_RECEIVED_REGISTERS             = 0x01,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_DELIVERED               = 0x02,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_RECEIVED                = 0x03,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_DELIVERED_REGISTERS_NO_BILLING = 0x04,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_RECEIVED_REGISTER_NO_BILLINGS  = 0x05,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_DELIVERED_NO_BILLING    = 0x06,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_TIER_INFORMATION_SET_RECEIVED_NO_BILLING     = 0x07,
    EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_DATA_UNAVAILABLE                                   = 0x80,
} EmberAfSnapshotPayloadType;

// Enum for SnapshotScheduleConfirmation
typedef enum
{
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_ACCEPTED                                   = 0x00,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_TYPE_NOT_SUPPORTED                = 0x01,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_CAUSE_NOT_SUPPORTED               = 0x02,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_SCHEDULE_NOT_CURRENTLY_AVAILABLE  = 0x03,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_SNAPSHOT_SCHEDULES_NOT_SUPPORTED_BY_DEVICE = 0x04,
    EMBER_ZCL_SNAPSHOT_SCHEDULE_CONFIRMATION_INSUFFICIENT_SPACE_FOR_SNAPSHOT_SCHEDULE   = 0x05,
} EmberAfSnapshotScheduleConfirmation;

// Enum for SquawkLevel
typedef enum
{
    EMBER_ZCL_SQUAWK_LEVEL_LOW_LEVEL       = 0x0,
    EMBER_ZCL_SQUAWK_LEVEL_MEDIUM_LEVEL    = 0x1,
    EMBER_ZCL_SQUAWK_LEVEL_HIGH_LEVEL      = 0x2,
    EMBER_ZCL_SQUAWK_LEVEL_VERY_HIGH_LEVEL = 0x2,
} EmberAfSquawkLevel;

// Enum for SquawkMode
typedef enum
{
    EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_ARMED    = 0x0,
    EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_DISARMED = 0x1,
} EmberAfSquawkMode;

// Enum for SquawkStobe
typedef enum
{
    EMBER_ZCL_SQUAWK_STOBE_NO_STROBE  = 0x0,
    EMBER_ZCL_SQUAWK_STOBE_USE_STROBE = 0x1,
} EmberAfSquawkStobe;

// Enum for StartOfWeek
typedef enum
{
    EMBER_ZCL_START_OF_WEEK_SUNDAY    = 0x00,
    EMBER_ZCL_START_OF_WEEK_MONDAY    = 0x01,
    EMBER_ZCL_START_OF_WEEK_TUESDAY   = 0x02,
    EMBER_ZCL_START_OF_WEEK_WEDNESDAY = 0x03,
    EMBER_ZCL_START_OF_WEEK_THURSDAY  = 0x04,
    EMBER_ZCL_START_OF_WEEK_FRIDAY    = 0x05,
    EMBER_ZCL_START_OF_WEEK_SATURDAY  = 0x06,
} EmberAfStartOfWeek;

// Enum for StartUpOnOffValue
typedef enum
{
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_OFF      = 0x00,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_ON       = 0x01,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_TOGGLE   = 0x02,
    EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_PREVIOUS = 0xFF,
} EmberAfStartUpOnOffValue;

// Enum for Status
typedef enum
{
    EMBER_ZCL_STATUS_SUCCESS                     = 0x00,
    EMBER_ZCL_STATUS_FAILURE                     = 0x01,
    EMBER_ZCL_STATUS_NOT_AUTHORIZED              = 0x7E,
    EMBER_ZCL_STATUS_MALFORMED_COMMAND           = 0x80,
    EMBER_ZCL_STATUS_UNSUP_COMMAND               = 0x81,
    EMBER_ZCL_STATUS_UNSUP_GENERAL_COMMAND       = 0x82,
    EMBER_ZCL_STATUS_UNSUP_MANUF_CLUSTER_COMMAND = 0x83,
    EMBER_ZCL_STATUS_UNSUP_MANUF_GENERAL_COMMAND = 0x84,
    EMBER_ZCL_STATUS_INVALID_FIELD               = 0x85,
    EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE       = 0x86,
    EMBER_ZCL_STATUS_INVALID_VALUE               = 0x87,
    EMBER_ZCL_STATUS_READ_ONLY                   = 0x88,
    EMBER_ZCL_STATUS_INSUFFICIENT_SPACE          = 0x89,
    EMBER_ZCL_STATUS_DUPLICATE_EXISTS            = 0x8A,
    EMBER_ZCL_STATUS_NOT_FOUND                   = 0x8B,
    EMBER_ZCL_STATUS_UNREPORTABLE_ATTRIBUTE      = 0x8C,
    EMBER_ZCL_STATUS_INVALID_DATA_TYPE           = 0x8D,
    EMBER_ZCL_STATUS_INVALID_SELECTOR            = 0x8E,
    EMBER_ZCL_STATUS_WRITE_ONLY                  = 0x8F,
    EMBER_ZCL_STATUS_INCONSISTENT_STARTUP_STATE  = 0x90,
    EMBER_ZCL_STATUS_DEFINED_OUT_OF_BAND         = 0x91,
    EMBER_ZCL_STATUS_ACTION_DENIED               = 0x93,
    EMBER_ZCL_STATUS_TIMEOUT                     = 0x94,
    EMBER_ZCL_STATUS_ABORT                       = 0x95,
    EMBER_ZCL_STATUS_INVALID_IMAGE               = 0x96,
    EMBER_ZCL_STATUS_WAIT_FOR_DATA               = 0x97,
    EMBER_ZCL_STATUS_NO_IMAGE_AVAILABLE          = 0x98,
    EMBER_ZCL_STATUS_REQUIRE_MORE_IMAGE          = 0x99,
    EMBER_ZCL_STATUS_NOTIFICATION_PENDING        = 0x9A,
    EMBER_ZCL_STATUS_HARDWARE_FAILURE            = 0xC0,
    EMBER_ZCL_STATUS_SOFTWARE_FAILURE            = 0xC1,
    EMBER_ZCL_STATUS_UNSUPPORTED_CLUSTER         = 0xC3,
    EMBER_ZCL_STATUS_LIMIT_REACHED               = 0xC4,
} EmberAfStatus;

// Enum for StepMode
typedef enum
{
    EMBER_ZCL_STEP_MODE_UP   = 0x0,
    EMBER_ZCL_STEP_MODE_DOWN = 0x1,
} EmberAfStepMode;

// Enum for SupplyStatus
typedef enum
{
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_OFF       = 0x00,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_OFF_ARMED = 0x01,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_ON        = 0x02,
    EMBER_ZCL_SUPPLY_STATUS_SUPPLY_UNCHANGED = 0x03,
} EmberAfSupplyStatus;

// Enum for SwitchActions
typedef enum
{
    EMBER_ZCL_SWITCH_ACTIONS_ON     = 0x0,
    EMBER_ZCL_SWITCH_ACTIONS_OFF    = 0x1,
    EMBER_ZCL_SWITCH_ACTIONS_TOGGLE = 0x2,
} EmberAfSwitchActions;

// Enum for SwitchType
typedef enum
{
    EMBER_ZCL_SWITCH_TYPE_TOGGLE         = 0x00,
    EMBER_ZCL_SWITCH_TYPE_MOMENTARY      = 0x01,
    EMBER_ZCL_SWITCH_TYPE_MULTI_FUNCTION = 0x02,
} EmberAfSwitchType;

// Enum for TariffChargingScheme
typedef enum
{
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_TOU_TARIFF                                           = 0x00,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TARIFF                                         = 0x10,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TOU_TARIFF_WITH_COMMON_THRESHOLDS              = 0x20,
    EMBER_ZCL_TARIFF_CHARGING_SCHEME_BLOCK_TOU_TARIFF_WITH_INDIVIDUAL_THRESHOLDS_PER_TIER = 0x30,
} EmberAfTariffChargingScheme;

// Enum for TariffResolutionPeriod
typedef enum
{
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_NOT_DEFINED  = 0x00,
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_BLOCK_PERIOD = 0x01,
    EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_ONE_DAY      = 0x02,
} EmberAfTariffResolutionPeriod;

// Enum for TariffType
typedef enum
{
    EMBER_ZCL_TARIFF_TYPE_DELIVERED_TARIFF              = 0x00,
    EMBER_ZCL_TARIFF_TYPE_RECEIVED_TARIFF               = 0x01,
    EMBER_ZCL_TARIFF_TYPE_DELIVERED_AND_RECEIVED_TARIFF = 0x02,
} EmberAfTariffType;

// Enum for TemperatureDisplayMode
typedef enum
{
    EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_CELSIUS    = 0x0,
    EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_FAHRENHEIT = 0x1,
} EmberAfTemperatureDisplayMode;

// Enum for TemperatureSetpointHold
typedef enum
{
    EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_OFF = 0x00,
    EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_ON  = 0x01,
} EmberAfTemperatureSetpointHold;

// Enum for ThermostatControlSequence
typedef enum
{
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_ONLY                    = 0x0,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_WITH_REHEAT             = 0x1,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_ONLY                    = 0x2,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_WITH_REHEAT             = 0x3,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING             = 0x4,
    EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING_WITH_REHEAT = 0x5,
} EmberAfThermostatControlSequence;

// Enum for ThermostatRunningMode
typedef enum
{
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_OFF  = 0x00,
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_COOL = 0x03,
    EMBER_ZCL_THERMOSTAT_RUNNING_MODE_HEAT = 0x04,
} EmberAfThermostatRunningMode;

// Enum for ThermostatSystemMode
typedef enum
{
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_OFF               = 0x0,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_AUTO              = 0x1,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_COOL              = 0x3,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_HEAT              = 0x4,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_EMERGENCY_HEATING = 0x5,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_PRECOOLING        = 0x6,
    EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_FAN_ONLY          = 0x7,
} EmberAfThermostatSystemMode;

// Enum for TierBlockMode
typedef enum
{
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK                      = 0x00,
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK_PRICE_TIER           = 0x01,
    EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK_PRICE_TIER_THRESHOLD = 0x02,
    EMBER_ZCL_TIER_BLOCK_MODE_NOT_USED                          = 0xFF,
} EmberAfTierBlockMode;

// Enum for TimeEncoding
typedef enum
{
    EMBER_ZCL_TIME_ENCODING_RELATIVE = 0x00,
    EMBER_ZCL_TIME_ENCODING_ABSOLUTE = 0x40,
} EmberAfTimeEncoding;

// Enum for TunnelingProtocolId
typedef enum
{
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_DLMS_COSEM   = 0x00,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IEC_61107    = 0x01,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_ANSI_C12     = 0x02,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_M_BUS        = 0x03,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_SML          = 0x04,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_CLIMATE_TALK = 0x05,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_GB_HRGP      = 0x06,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IP_V4        = 0x07,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_IP_V6        = 0x08,
    EMBER_ZCL_TUNNELING_PROTOCOL_ID_TEST         = 0xC7,
} EmberAfTunnelingProtocolId;

// Enum for TunnelingTransferDataStatus
typedef enum
{
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_NO_SUCH_TUNNEL = 0x00,
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_WRONG_DEVICE   = 0x01,
    EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_DATA_OVERFLOW  = 0x02,
} EmberAfTunnelingTransferDataStatus;

// Enum for TunnelingTunnelStatus
typedef enum
{
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_SUCCESS                    = 0x00,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_BUSY                       = 0x01,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_NO_MORE_TUNNEL_IDS         = 0x02,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_PROTOCOL_NOT_SUPPORTED     = 0x03,
    EMBER_ZCL_TUNNELING_TUNNEL_STATUS_FLOW_CONTROL_NOT_SUPPORTED = 0x04,
} EmberAfTunnelingTunnelStatus;

// Enum for WanStatus
typedef enum
{
    EMBER_ZCL_WAN_STATUS_CONNECTION_TO_WAN_IS_NOT_AVAILABLE = 0x00,
    EMBER_ZCL_WAN_STATUS_CONNECTION_TO_WAN_IS_AVAILABLE     = 0x01,
} EmberAfWanStatus;

// Enum for WarningEvent
typedef enum
{
    EMBER_ZCL_WARNING_EVENT_WARNING1_OVERALL_POWER_ABOVE_AVAILABLE_POWER_LEVEL                                             = 0x00,
    EMBER_ZCL_WARNING_EVENT_WARNING2_OVERALL_POWER_ABOVE_POWER_THRESHOLD_LEVEL                                             = 0x01,
    EMBER_ZCL_WARNING_EVENT_WARNING3_OVERALL_POWER_BACK_BELOW_THE_AVAILABLE_POWER_LEVEL                                    = 0x02,
    EMBER_ZCL_WARNING_EVENT_WARNING4_OVERALL_POWER_BACK_BELOW_THE_POWER_THRESHOLD_LEVEL                                    = 0x03,
    EMBER_ZCL_WARNING_EVENT_WARNING5_OVERALL_POWER_WILL_BE_POTENTIALLY_ABOVE_AVAILABLE_POWER_LEVEL_IF_THE_APPLIANCE_STARTS = 0x04,
} EmberAfWarningEvent;

// Enum for WarningMode
typedef enum
{
    EMBER_ZCL_WARNING_MODE_STOP            = 0x0,
    EMBER_ZCL_WARNING_MODE_BURGLAR         = 0x1,
    EMBER_ZCL_WARNING_MODE_FIRE            = 0x2,
    EMBER_ZCL_WARNING_MODE_EMERGENCY       = 0x3,
    EMBER_ZCL_WARNING_MODE_POLICE_PANIC    = 0x4,
    EMBER_ZCL_WARNING_MODE_FIRE_PANIC      = 0x5,
    EMBER_ZCL_WARNING_MODE_EMERGENCY_PANIC = 0x6,
} EmberAfWarningMode;

// Enum for WarningStobe
typedef enum
{
    EMBER_ZCL_WARNING_STOBE_NO_STROBE  = 0x0,
    EMBER_ZCL_WARNING_STOBE_USE_STROBE = 0x1,
} EmberAfWarningStobe;

// Enum for WwahIasZoneEnrollmentMode
typedef enum
{
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_TRIP_TO_PAIR             = 0x00,
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_AUTO_ENROLLMENT_RESPONSE = 0x01,
    EMBER_ZCL_WWAH_IAS_ZONE_ENROLLMENT_MODE_REQUEST                  = 0x02,
} EmberAfWwahIasZoneEnrollmentMode;

// Enum for WwahPowerNotificationReason
typedef enum
{
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_UNKNOWN               = 0x00,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BATTERY               = 0x01,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BROWNOUT              = 0x02,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_WATCHDOG              = 0x03,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_RESET_PIN             = 0x04,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_MEMORY_HARDWARE_FAULT = 0x05,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_SOFWARE_EXCEPTION     = 0x06,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_OTA_BOOTLOAD_SUCCESS  = 0x07,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_SOFTWARE_RESET        = 0x08,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_POWER_BUTTON          = 0x09,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_TEMPERATURE           = 0x0A,
    EMBER_ZCL_WWAH_POWER_NOTIFICATION_REASON_BOOTLOAD_FAILURE      = 0x0B,
} EmberAfWwahPowerNotificationReason;

// Enum for ZigbeeInformationLogicalType
typedef enum
{
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_COORDINATOR = 0x00,
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_ROUTER      = 0x01,
    EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_END_DEVICE  = 0x02,
} EmberAfZigbeeInformationLogicalType;

// Enum for ZllStatus
typedef enum
{
    EMBER_ZCL_ZLL_STATUS_SUCCESS = 0x00,
    EMBER_ZCL_ZLL_STATUS_FAILURE = 0x01,
} EmberAfZllStatus;

#endif //__ZAP_EMBER_ENUMS__