# Copyright (c) 2022 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Events Tests

config:
    cluster: "Test Cluster"
    endpoint: 1

tests:
    - label: "Wait for the commissioned device to be retrieved"
      cluster: "DelayCommands"
      command: "WaitForCommissionee"

    - label: "Check there is no event on the target endpoint"
      disabled: true # The operation seems to not returns
      command: "readEvent"
      event: "TestEvent"
      response:
          value: {}

    - label: "Check reading events from an invalid endpoint"
      disabled: true # The operation seems to not returns
      command: "readEvent"
      event: "TestEvent"
      endpoint: 0
      response:
          value: {}

    - label: "Generate an event on the accessory"
      command: "TestEmitTestEventRequest"
      arguments:
          values:
              - name: "arg1"
                value: 1
              - name: "arg2"
                value: 2
              - name: "arg3"
                value: true
      # On Linux it seems that the first event value is not 0, but instead returns an initialized value
      #response:
      #    values:
      #        - name: "value"
      #          value: 0

    - label: "Read the event back"
      command: "readEvent"
      event: "TestEvent"
      response:
          value: { arg1: 1, arg2: 2, arg3: true }

    - label: "Generate a second event on the accessory"
      command: "TestEmitTestEventRequest"
      arguments:
          values:
              - name: "arg1"
                value: 3
              - name: "arg2"
                value: 4
              - name: "arg3"
                value: false
      # On Linux it seems that the first event value is not 0, but instead returns an initialized value
      #response:
      #    values:
      #        - name: "value"
      #          value: 1

    - label: "Read the event back"
      disabled: true # A list of events is returned, and the response value will be checked against the first element
      command: "readEvent"
      event: "TestEvent"
      response:
          value: [{ arg1: 3, arg2: 4, arg3: false }]
